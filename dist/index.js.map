{"version":3,"sources":["../src/index.ts"],"sourcesContent":["interface ResultCode {\n  selectorName: string\n  resultVal: string\n}\n\nenum CustomSelect {\n  auto = 'auto',\n  vh = '100vh',\n  vw = '100vw',\n}\n\ninterface CssCodeParse {\n  selectorName: string\n  cssCode: string | CssCodeParse[]\n}\n\n\ninterface CustomTheme extends Record<string, undefined | Record<string, string>> {\n  media?: Record<string, string>\n  'backdrop-blur'?: Record<string, string>\n  'backdrop-brightness'?: Record<string, string>\n  'backdrop-contrast'?: Record<string, string>\n  'backdrop-grayscale'?: Record<string, string>\n  'backdrop-hue-rotate'?: Record<string, string>\n  'backdrop-invert'?: Record<string, string>\n  'backdrop-opacity'?: Record<string, string>\n  'backdrop-saturate'?: Record<string, string>\n  'backdrop-sepia'?: Record<string, string>\n  blur?: Record<string, string>\n  brightness?: Record<string, string>\n  contrast?: Record<string, string>\n  grayscale?: Record<string, string>\n  'hue-rotate'?: Record<string, string>\n  invert?: Record<string, string>\n  saturate?: Record<string, string>\n  sepia?: Record<string, string>\n  scale?: Record<string, string>\n  rotate?: Record<string, string>\n  translate?: Record<string, string>\n  skew?: Record<string, string>\n}\n\ninterface TranslatorConfig {\n  prefix?: string\n  /**\n   * @default true\n   */\n  useAllDefaultValues?: boolean\n  customTheme?: CustomTheme\n}\n\nconst specialAttribute = [\n  '@charset',\n  '@font-face',\n  '@import',\n  '@keyframes'\n]\n\nlet useAllDefaultValues = false\nlet customTheme: CustomTheme = {}\n\nconst hasNegative = (val: string): ['-' | '', string] => [val[0] === '-' ? '-' : '', val[0] === '-' ? val.slice(1) : val]\nconst getCustomVal = (val: string) => {\n  val = val.replace(/\\s/g, '_')\n  for (let index = 1; index < val.length; index) {\n    const char = val[index]\n    if (char === '_' && char === val[index - 1]) {\n      val = val.slice(0, index) + val.slice(index + 1)\n    } else {\n      index++\n    }\n  }\n  return val\n}\nconst isColor = (str: string, joinLinearGradient = false) => {\n  const namedColors = [\n    'initial',\n    'inherit',\n    'currentColor',\n    'currentcolor',\n    'transparent',\n    'aliceblue',\n    'antiquewhite',\n    'aqua',\n    'aquamarine',\n    'azure',\n    'beige',\n    'bisque',\n    'black',\n    'blanchedalmond',\n    'blue',\n    'blueviolet',\n    'brown',\n    'burlywood',\n    'cadetblue',\n    'chartreuse',\n    'chocolate',\n    'coral',\n    'cornflowerblue',\n    'cornsilk',\n    'crimson',\n    'cyan',\n    'darkblue',\n    'darkcyan',\n    'darkgoldenrod',\n    'darkgray',\n    'darkgrey',\n    'darkgreen',\n    'darkkhaki',\n    'darkmagenta',\n    'darkolivegreen',\n    'darkorange',\n    'darkorchid',\n    'darkred',\n    'darksalmon',\n    'darkseagreen',\n    'darkslateblue',\n    'darkslategray',\n    'darkslategrey',\n    'darkturquoise',\n    'darkviolet',\n    'deeppink',\n    'deepskyblue',\n    'dimgray',\n    'dimgrey',\n    'dodgerblue',\n    'firebrick',\n    'floralwhite',\n    'forestgreen',\n    'fuchsia',\n    'gainsboro',\n    'ghostwhite',\n    'gold',\n    'goldenrod',\n    'gray',\n    'grey',\n    'green',\n    'greenyellow',\n    'honeydew',\n    'hotpink',\n    'indianred',\n    'indigo',\n    'ivory',\n    'khaki',\n    'lavender',\n    'lavenderblush',\n    'lawngreen',\n    'lemonchiffon',\n    'lightblue',\n    'lightcoral',\n    'lightcyan',\n    'lightgoldenrodyellow',\n    'lightgray',\n    'lightgrey',\n    'lightgreen',\n    'lightpink',\n    'lightsalmon',\n    'lightseagreen',\n    'lightskyblue',\n    'lightslategray',\n    'lightslategrey',\n    'lightsteelblue',\n    'lightyellow',\n    'lime',\n    'limegreen',\n    'linen',\n    'magenta',\n    'maroon',\n    'mediumaquamarine',\n    'mediumblue',\n    'mediumorchid',\n    'mediumpurple',\n    'mediumseagreen',\n    'mediumslateblue',\n    'mediumspringgreen',\n    'mediumturquoise',\n    'mediumvioletred',\n    'midnightblue',\n    'mintcream',\n    'mistyrose',\n    'moccasin',\n    'navajowhite',\n    'navy',\n    'oldlace',\n    'olive',\n    'olivedrab',\n    'orange',\n    'orangered',\n    'orchid',\n    'palegoldenrod',\n    'palegreen',\n    'paleturquoise',\n    'palevioletred',\n    'papayawhip',\n    'peachpuff',\n    'peru',\n    'pink',\n    'plum',\n    'powderblue',\n    'purple',\n    'rebeccapurple',\n    'red',\n    'rosybrown',\n    'royalblue',\n    'saddlebrown',\n    'salmon',\n    'sandybrown',\n    'seagreen',\n    'seashell',\n    'sienna',\n    'silver',\n    'skyblue',\n    'slateblue',\n    'slategray',\n    'slategrey',\n    'snow',\n    'springgreen',\n    'steelblue',\n    'tan',\n    'teal',\n    'thistle',\n    'tomato',\n    'turquoise',\n    'violet',\n    'wheat',\n    'white',\n    'whitesmoke',\n    'yellow',\n    'yellowgreen'\n  ]\n  const regexp = /^\\s*#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\\s*$|^\\s*rgb\\(\\s*(\\d{1,3}|[a-z]+)\\s*,\\s*(\\d{1,3}|[a-z]+)\\s*,\\s*(\\d{1,3}|[a-z]+)\\s*\\)\\s*$|^\\s*rgba\\(\\s*(\\d{1,3}|[a-z]+)\\s*,\\s*(\\d{1,3}|[a-z]+)\\s*,\\s*(\\d{1,3}|[a-z]+)\\s*,\\s*(\\d*(\\.\\d+)?)\\s*\\)\\s*$|^\\s*hsl\\(\\s*(\\d+)\\s*,\\s*(\\d*(\\.\\d+)?%)\\s*,\\s*(\\d*(\\.\\d+)?%)\\)\\s*$|^\\s*hsla\\((\\d+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%\\s*,\\s*(\\d*(\\.\\d+)?)\\)\\s*$/i\n  return regexp.test(str) || namedColors.includes(str) || (joinLinearGradient && /^\\s*linear-gradient\\([\\w\\W]+?\\)\\s*$/.test(str))\n}\n\nconst isUnit = (str: string) => {\n  return [\n    'em', 'ex', 'ch', 'rem', 'vw', 'vh', 'vmin', 'vmax',\n    'cm', 'mm', 'in', 'pt', 'pc', 'px', 'min-content', 'max-content', 'fit-content',\n    'deg', 'grad', 'rad', 'turn', 'ms', 's', 'Hz', 'kHz',\n    '%', 'length', 'inherit', 'thick', 'medium', 'thin', 'initial', 'auto'\n  ].includes(str.replace(/[.\\d\\s-]/g, '')) || /^[-.\\d]+$/.test(str.trim()) || /^var\\(.+\\)$/.test(str)\n}\n\nconst getUnitMetacharactersVal = (val: string, excludes: CustomSelect[] = []): string | undefined => {\n  if (/^\\d+\\.[1-9]{2,}%$/.test(val)) {\n    val = `${Number(val.slice(0, -1)).toFixed(6).replace(/(\\.[1-9]{2})\\d+/, '$1')}%`\n  }\n  const config: Record<string, string> = {\n    'auto': 'auto',\n    '50%': '1/2',\n    '33.33%': '1/3',\n    '66.66%': '2/3',\n    '25%': '1/4',\n    '75%': '3/4',\n    '20%': '1/5',\n    '40%': '2/5',\n    '60%': '3/5',\n    '80%': '4/5',\n    '16.66%': '1/6',\n    '83.33%': '5/6',\n    '8.33%': '1/12',\n    '41.66%': '5/12',\n    '58.33%': '7/12',\n    '91.66%': '11/12',\n    '100%': 'full',\n    '100vw': 'screen',\n    '100vh': 'screen',\n    'min-content': 'min',\n    'max-content': 'max'\n  }\n  excludes.forEach(key => {\n    delete config[key]\n  })\n  return config[val]\n}\n\nconst getRemDefaultVal = (val: string) => {\n  return ({\n    \"0px\": \"0\", \"1px\": \"px\", \"0.125rem\": \"0.5\", \"0.25rem\": \"1\", \"0.375rem\": \"1.5\", \"0.5rem\": \"2\", \"0.625rem\": \"2.5\", \"0.75rem\": \"3\", \"0.875rem\": \"3.5\", \"1rem\": \"4\", \"1.25rem\": \"5\", \"1.5rem\": \"6\", \"1.75rem\": \"7\", \"2rem\": \"8\", \"2.25rem\": \"9\", \"2.5rem\": \"10\", \"2.75rem\": \"11\", \"3rem\": \"12\", \"3.5rem\": \"14\", \"4rem\": \"16\", \"5rem\": \"20\", \"6rem\": \"24\", \"7rem\": \"28\", \"8rem\": \"32\", \"9rem\": \"36\", \"10rem\": \"40\", \"11rem\": \"44\", \"12rem\": \"48\", \"13rem\": \"52\", \"14rem\": \"56\", \"15rem\": \"60\", \"16rem\": \"64\", \"18rem\": \"72\", \"20rem\": \"80\", \"24rem\": \"96\"\n  }[val])\n}\n\nconst getBorderRadiusDefaultVal = (val: string) => {\n  return ({\n    \"0px\": \"-none\",\n    \"0.125rem\": \"-sm\",\n    \"0.25rem\": \"null\",\n    \"0.375rem\": \"-md\",\n    \"0.5rem\": \"-lg\",\n    \"0.75rem\": \"-xl\",\n    \"1rem\": \"-2xl\",\n    \"1.5rem\": \"-3xl\",\n    \"9999px\": \"-full\"\n  }[val])\n}\n\nconst getFilterDefaultVal = (val: string) => {\n  return ({ \"blur(0)\": \"blur-none\", \"blur(4px)\": \"blur-sm\", \"blur(8px)\": \"blur\", \"blur(12px)\": \"blur-md\", \"blur(16px)\": \"blur-lg\", \"blur(24px)\": \"blur-xl\", \"blur(40px)\": \"blur-2xl\", \"blur(64px)\": \"blur-3xl\", \"brightness(0)\": \"brightness-0\", \"brightness(.5)\": \"brightness-50\", \"brightness(.75)\": \"brightness-75\", \"brightness(.9)\": \"brightness-90\", \"brightness(.95)\": \"brightness-95\", \"brightness(1)\": \"brightness-100\", \"brightness(1.05)\": \"brightness-105\", \"brightness(1.1)\": \"brightness-110\", \"brightness(1.25)\": \"brightness-125\", \"brightness(1.5)\": \"brightness-150\", \"brightness(2)\": \"brightness-200\", \"contrast(0)\": \"contrast-0\", \"contrast(.5)\": \"contrast-50\", \"contrast(.75)\": \"contrast-75\", \"contrast(1)\": \"contrast-100\", \"contrast(1.25)\": \"contrast-125\", \"contrast(1.5)\": \"contrast-150\", \"contrast(2)\": \"contrast-200\", \"drop-shadow(0 1px 1px rgba(0,0,0,0.05))\": \"drop-shadow-sm\", \"drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1)) drop-shadow(0 1px 1px rgba(0, 0, 0, 0.06))\": \"drop-shadow\", \"drop-shadow(0 4px 3px rgba(0, 0, 0, 0.07)) drop-shadow(0 2px 2px rgba(0, 0, 0, 0.06))\": \"drop-shadow-md\", \"drop-shadow(0 10px 8px rgba(0, 0, 0, 0.04)) drop-shadow(0 4px 3px rgba(0, 0, 0, 0.1))\": \"drop-shadow-lg\", \"drop-shadow(0 20px 13px rgba(0, 0, 0, 0.03)) drop-shadow(0 8px 5px rgba(0, 0, 0, 0.08))\": \"drop-shadow-xl\", \"drop-shadow(0 25px 25px rgba(0, 0, 0, 0.15))\": \"drop-shadow-2xl\", \"drop-shadow(0 0 #0000)\": \"drop-shadow-none\", \"grayscale(0)\": \"grayscale-0\", \"grayscale(1)\": \"grayscale\", \"hue-rotate(-180deg)\": \"-hue-rotate-180\", \"hue-rotate(-90deg)\": \"-hue-rotate-90\", \"hue-rotate(-60deg)\": \"-hue-rotate-60\", \"hue-rotate(-30deg)\": \"-hue-rotate-30\", \"hue-rotate(-15deg)\": \"-hue-rotate-15\", \"hue-rotate(0deg)\": \"hue-rotate-0\", \"hue-rotate(15deg)\": \"hue-rotate-15\", \"hue-rotate(30deg)\": \"hue-rotate-30\", \"hue-rotate(60deg)\": \"hue-rotate-60\", \"hue-rotate(90deg)\": \"hue-rotate-90\", \"hue-rotate(180deg)\": \"hue-rotate-180\", \"invert(0)\": \"invert-0\", \"invert(1)\": \"invert\", \"saturate(0)\": \"saturate-0\", \"saturate(.5)\": \"saturate-50\", \"saturate(1)\": \"saturate-100\", \"saturate(1.5)\": \"saturate-150\", \"saturate(2)\": \"saturate-200\", \"sepia(0)\": \"sepia-0\", \"sepia(1)\": \"sepia\", }[val])\n}\n\nconst propertyMap: Map<string, Record<string, string> | ((val: string) => string)> = new Map<string, Record<string, string> | ((val: string) => string)>([\n  [\n    'align-content',\n    {\n      'center': 'content-center',\n      'flex-start': 'content-start',\n      'flex-end': 'content-end',\n      'space-between': 'content-between',\n      'space-around': 'content-around',\n      'space-evenly': 'content-evenly'\n    }\n  ],\n  [\n    'align-items',\n    {\n      'flex-start': 'items-start', 'flex-end': 'items-end', 'center': 'items-center', 'baseline': 'items-baseline', 'stretch': 'items-stretch'\n    }\n  ],\n  [\n    'align-self',\n    {\n      'auto': 'self-auto', 'flex-start': 'self-start', 'flex-end': 'self-end', 'center': 'self-center', 'stretch': 'self-stretch', 'baseline': 'self-baseline'\n    }\n  ],\n  [\n    'all',\n    {\n      'initial': '[all:initial]',\n      'inherit': '[all:inherit]',\n      'unset': '[all:unset]'\n    }\n  ],\n  [\n    'animation',\n    val => ({ 'none': 'animate-none' }[val] ?? `animate-[${getCustomVal(val)}]`)\n  ],\n  [\n    'animation-delay',\n    val => (`[animation-delay:${getCustomVal(val)}]`)\n  ],\n  [\n    'animation-direction',\n    val => (`[animation-direction:${getCustomVal(val)}]`)\n  ],\n  [\n    'animation-duration',\n    val => (`[animation-duration:${getCustomVal(val)}]`)\n  ],\n  [\n    'animation-fill-mode',\n    val => (`[animation-fill-mode:${getCustomVal(val)}]`)\n  ],\n  [\n    'animation-iteration-count',\n    val => (`[animation-iteration-count:${getCustomVal(val)}]`)\n  ],\n  [\n    'animation-name',\n    val => (`[animation-name:${getCustomVal(val)}]`)\n  ],\n  [\n    'animation-play-state',\n    val => (`[animation-play-state:${getCustomVal(val)}]`)\n  ],\n  [\n    'animation-timing-function',\n    val => (`[animation-timing-function:${getCustomVal(val)}]`)\n  ],\n  [\n    'appearance',\n    val => ({ 'none': 'appearance-none' }[val] ?? `[appearance:${getCustomVal(val)}]`)\n  ],\n  [\n    'aspect-ratio',\n    val => (`[aspect-ratio:${getCustomVal(val)}]`)\n  ],\n  [\n    'backdrop-filter',\n    val => {\n      const defaultVal = { 'none': 'backdrop-filter-none' }[val]\n      if (defaultVal) {\n        return defaultVal\n      }\n\n      const backdropFilterValConfig: Record<string, ((v: string) => string)> = {\n        blur: (v: string) => `backdrop-blur-${customTheme[\"backdrop-blur\"]?.[v] ?? `[${v}]`}`,\n        brightness: (v: string) => `backdrop-brightness-${customTheme[\"backdrop-brightness\"]?.[v] ?? `[${v}]`}`,\n        contrast: (v: string) => `backdrop-contrast-${customTheme[\"backdrop-contrast\"]?.[v] ?? `[${v}]`}`,\n        grayscale: (v: string) => `backdrop-grayscale-${customTheme[\"backdrop-grayscale\"]?.[v] ?? `[${v}]`}`,\n        'hue-rotate': (v: string) => {\n          const t = hasNegative(v)\n          return `${t[0]}backdrop-hue-rotate-${customTheme[\"backdrop-grayscale\"]?.[t[1]] ?? `[${t[1]}]`}`\n        },\n        invert: (v: string) => `backdrop-invert-${customTheme[\"backdrop-invert\"]?.[v] ?? `[${v}]`}`,\n        opacity: (v: string) => `backdrop-opacity-${customTheme[\"backdrop-opacity\"]?.[v] ?? `[${v}]`}`,\n        saturate: (v: string) => `backdrop-saturate-${customTheme[\"backdrop-saturate\"]?.[v] ?? `[${v}]`}`,\n        sepia: (v: string) => `backdrop-sepia-${customTheme[\"backdrop-sepia\"]?.[v] ?? `[${v}]`}`\n      }\n      const vals = getCustomVal(val).replace(/\\(.+?\\)/g, v => v.replace(/_/g, '')).split(')_').map(v => `${v})`)\n      vals[vals.length - 1] = vals[vals.length - 1].slice(0, -1)\n\n      let canUse = true\n      const res = vals.map(v => {\n        let canUsePipeV = false\n        let pipeV = ''\n        if (useAllDefaultValues) {\n          pipeV = (getFilterDefaultVal(v) || { \"opacity(0)\": \"backdrop-opacity-0\", \"opacity(0.05)\": \"backdrop-opacity-5\", \"opacity(0.1)\": \"backdrop-opacity-10\", \"opacity(0.2)\": \"backdrop-opacity-20\", \"opacity(0.25)\": \"backdrop-opacity-25\", \"opacity(0.3)\": \"backdrop-opacity-30\", \"opacity(0.4)\": \"backdrop-opacity-40\", \"opacity(0.5)\": \"backdrop-opacity-50\", \"opacity(0.6)\": \"backdrop-opacity-60\", \"opacity(0.7)\": \"backdrop-opacity-70\", \"opacity(0.75)\": \"backdrop-opacity-75\", \"opacity(0.8)\": \"backdrop-opacity-80\", \"opacity(0.9)\": \"backdrop-opacity-90\", \"opacity(0.95)\": \"backdrop-opacity-95\", \"opacity(1)\": \"backdrop-opacity-100\" }[v]) ?? ''\n          if (pipeV.length > 0) {\n            pipeV = pipeV.startsWith('backdrop-opacity') ? pipeV : `backdrop-${pipeV}`\n            canUsePipeV = true\n          }\n        }\n        pipeV = pipeV.length > 0 ? pipeV : v.replace(/^([a-zA-Z0-9_-]+)\\((.+?)\\)$/, (_r, k: string, v) => {\n          canUsePipeV = true\n          return backdropFilterValConfig[k]?.(v) ?? (canUse = false)\n        })\n        return canUsePipeV ? pipeV : ''\n      })\n      return canUse ? `backdrop-filter ${[...new Set(res)].join(' ')}` : `[backdrop-filter:${getCustomVal(val)}]`\n    }\n  ],\n  [\n    'backface-visibility',\n    {\n      'visible': '[backface-visibility:visible]',\n      'hidden': '[backface-visibility:hidden]'\n    }\n  ],\n  [\n    'background',\n    val => {\n      const legalConfig: Record<string, string> = {\n        ...propertyMap.get('background-attachment'),\n        ...propertyMap.get('background-repeat'),\n        'transparent': 'bg-transparent', 'currentColor': 'bg-current', 'currentcolor': 'bg-current', 'none': 'bg-none',\n        'bottom': 'bg-bottom', 'center': 'bg-center', 'left': 'bg-left', 'left bottom': 'bg-left-bottom', 'left top': 'bg-left-top', 'right': 'bg-right', 'right bottom': 'bg-right-bottom', 'right top': 'bg-right-top', 'top': 'bg-top', 'auto': 'bg-auto', 'cover': 'bg-cover', 'contain': 'bg-contain'\n      }\n      return legalConfig[val] ?? `bg-[${getCustomVal(val)}]`\n    }\n  ],\n  [\n    'background-attachment',\n    {\n      'fixed': 'bg-fixed', 'local': 'bg-local', 'scroll': 'bg-scroll'\n    }\n  ],\n  [\n    'background-blend-mode',\n    {\n      'normal': 'bg-blend-normal', 'multiply': 'bg-blend-multiply', 'screen': 'bg-blend-screen', 'overlay': 'bg-blend-overlay', 'darken': 'bg-blend-darken', 'lighten': 'bg-blend-lighten', 'color-dodge': 'bg-blend-color-dodge', 'color-burn': 'bg-blend-color-burn', 'hard-light': 'bg-blend-hard-light', 'soft-light': 'bg-blend-soft-light', 'difference': 'bg-blend-difference', 'exclusion': 'bg-blend-exclusion', 'hue': 'bg-blend-hue', 'saturation': 'bg-blend-saturation', 'color': 'bg-blend-color', 'luminosity': 'bg-blend-luminosity'\n    }\n  ],\n  [\n    'background-clip',\n    {\n      'border-box': 'bg-clip-border', 'padding-box': 'bg-clip-padding', 'content-box': 'bg-clip-content', 'text': 'bg-clip-text'\n    }\n  ],\n  [\n    'background-color',\n    val => ({ 'transparent': 'bg-transparent', 'currentColor': 'bg-current', 'currentcolor': 'bg-current' }[val] ?? (isColor(val, true) ? `bg-[${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'background-image',\n    val => ({ 'none': 'bg-none' }[val] ?? `bg-[${getCustomVal(val)}]`)\n  ],\n  [\n    'background-origin',\n    {\n      'border-box': 'bg-origin-border', 'padding-box': 'bg-origin-padding', 'content-box': 'bg-origin-content'\n    }\n  ],\n  [\n    'background-position',\n    val => ({\n      'bottom': 'bg-bottom', 'center': 'bg-center', 'left': 'bg-left', 'left bottom': 'bg-left-bottom', 'left top': 'bg-left-top', 'right': 'bg-right', 'right bottom': 'bg-right-bottom', 'right top': 'bg-right-top', 'top': 'bg-top'\n    }[val] ?? `bg-[${getCustomVal(val)}]`)\n  ],\n  [\n    'background-repeat',\n    {\n      'repeat': 'bg-repeat', 'no-repeat': 'bg-no-repeat', 'repeat-x': 'bg-repeat-x', 'repeat-y': 'bg-repeat-y', 'round': 'bg-repeat-round', 'space': 'bg-repeat-space'\n    }\n  ],\n  [\n    'background-size',\n    val => ({\n      'auto': 'bg-auto', 'cover': 'bg-cover', 'contain': 'bg-contain'\n    }[val] ?? `[background-size:${getCustomVal(val)}]`)\n  ],\n  [\n    'border',\n    val => {\n      val = val.replace(/\\(.+?\\)/, v => v.replace(/\\s/g, ''))\n      const vals: string = val.split(' ').filter(v => v !== '').map(v => (isUnit(v) || isColor(v)) ? ({ 'transparent': 'border-transparent', 'currentColor': 'border-current', 'currentcolor': 'border-current' }[val] ?? `border-[${v}]`) : ((propertyMap.get('border-style') as Record<string, string>)[v] ?? '')).filter(v => v !== '').join(' ')\n      return vals\n    }\n  ],\n  [\n    'border-bottom',\n    val => {\n      if (isUnit(val)) {\n        return `border-b-[${getCustomVal(val)}]`\n      } else {\n        return `[border-bottom:${getCustomVal(val)}]`\n      }\n    }\n  ],\n  [\n    'border-bottom-color',\n    val => (isColor(val, true) ? `[border-bottom-color:${getCustomVal(val)}]` : '')\n  ],\n  [\n    'border-bottom-left-radius',\n    val => ({ '0': 'rounded-bl-none', '0px': 'rounded-bl-none' }[val] ?? (isUnit(val) ? `rounded-bl${((useAllDefaultValues && getBorderRadiusDefaultVal(val)) || `-[${getCustomVal(val)}]`).replace(/null$/, '')}` : ''))\n  ],\n  [\n    'border-bottom-right-radius',\n    val => ({ '0': 'rounded-br-none', '0px': 'rounded-br-none' }[val] ?? (isUnit(val) ? `rounded-br${((useAllDefaultValues && getBorderRadiusDefaultVal(val)) || `-[${getCustomVal(val)}]`).replace(/null$/, '')}` : ''))\n  ],\n  [\n    'border-bottom-style',\n    val => ((propertyMap.get('border-style') as Record<string, string>)[val] ? `[border-bottom-style:${val}]` : '')\n  ],\n  [\n    'border-bottom-width',\n    val => ((isUnit(val) ? `border-b-[${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'border-collapse',\n    {\n      'collapse': 'border-collapse', 'separate': 'border-separate'\n    }\n  ],\n  [\n    'border-color',\n    val => ({\n      'transparent': 'border-transparent', 'currentColor': 'border-current', 'currentcolor': 'border-current'\n    }[val] ?? (isColor(val) ? `border-[${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'border-image',\n    val => (`[border-image:${getCustomVal(val)}]`)\n  ],\n  [\n    'border-image-outset',\n    val => (`[border-image-outset:${getCustomVal(val)}]`)\n  ],\n  [\n    'border-image-repeat',\n    val => (`[border-image-repeat:${getCustomVal(val)}]`)\n  ],\n  [\n    'border-image-slice',\n    val => (`[border-image-slice:${getCustomVal(val)}]`)\n  ],\n  [\n    'border-image-source',\n    val => (`[border-image-source:${getCustomVal(val)}]`)\n  ],\n  [\n    'border-image-width',\n    val => (isUnit(val) ? `[border-image-width:${getCustomVal(val)}]` : '')\n  ],\n  [\n    'border-left',\n    val => {\n      if (isUnit(val)) {\n        return `border-l-[${getCustomVal(val)}]`\n      } else {\n        return `[border-left:${getCustomVal(val)}]`\n      }\n    }\n  ],\n  [\n    'border-left-color',\n    val => (isColor(val, true) ? `[border-left-color:${getCustomVal(val)}]` : '')\n  ],\n  [\n    'border-left-style',\n    val => ((propertyMap.get('border-style') as Record<string, string>)[val] ? `[border-left-style:${val}]` : '')\n  ],\n  [\n    'border-left-width',\n    val => ((isUnit(val) ? `border-l-[${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'border-radius',\n    val => {\n      const r = ({ '0': 'rounded-none', '0px': 'rounded-none' }[val])\n      if (r) {\n        return r\n      }\n      if (val.includes('/')) {\n        return `rounded-[${getCustomVal(val)}]`\n      }\n      let vals = val.split(' ').filter(v => v !== '')\n      if (vals.filter(v => !isUnit(v)).length > 0) {\n        return ''\n      }\n      vals = vals.map(v => ((useAllDefaultValues && getBorderRadiusDefaultVal(v)) || `-[${v}]`).replace(/null$/, ''))\n      if (vals.length === 1) {\n        return `rounded${vals[0]}`\n      } else if (vals.length === 2) {\n        return `rounded-tl${vals[0]} rounded-br${vals[0]} rounded-tr${vals[1]} rounded-bl${vals[1]}`\n      } else if (vals.length === 3) {\n        return `rounded-tl${vals[0]} rounded-br${vals[2]} rounded-tr${vals[1]} rounded-bl${vals[1]}`\n      } else if (vals.length === 4) {\n        return `rounded-tl${vals[0]} rounded-br${vals[2]} rounded-tr${vals[1]} rounded-bl${vals[3]}`\n      }\n      return ''\n    }\n  ],\n  [\n    'border-right',\n    val => {\n      if (isUnit(val)) {\n        return `border-r-[${getCustomVal(val)}]`\n      } else {\n        return `[border-right:${getCustomVal(val)}]`\n      }\n    }\n  ],\n  [\n    'border-right-color',\n    val => (isColor(val, true) ? `[border-right-color:${getCustomVal(val)}]` : '')\n  ],\n  [\n    'border-right-style',\n    val => ((propertyMap.get('border-style') as Record<string, string>)[val] ? `[border-right-style:${val}]` : '')\n  ],\n  [\n    'border-right-width',\n    val => ((isUnit(val) ? `border-r-[${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'border-spacing',\n    val => ((isUnit(val) ? `[border-spacing:${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'border-style',\n    {\n      'solid': 'border-solid', 'dashed': 'border-dashed', 'dotted': 'border-dotted', 'double': 'border-double', 'none': 'border-none'\n    }\n  ],\n  [\n    'border-top',\n    val => {\n      if (isUnit(val)) {\n        return `border-t-[${getCustomVal(val)}]`\n      } else {\n        return `[border-top:${getCustomVal(val)}]`\n      }\n    }\n  ],\n  [\n    'border-top-color',\n    val => (isColor(val, true) ? `[border-top-color:${getCustomVal(val)}]` : '')\n  ],\n  [\n    'border-top-left-radius',\n    val => ({ '0': 'rounded-tl-none', '0px': 'rounded-tl-none' }[val] ?? (isUnit(val) ? `rounded-tl${((useAllDefaultValues && getBorderRadiusDefaultVal(val)) || `-[${getCustomVal(val)}]`).replace(/null$/, '')}` : ''))\n  ],\n  [\n    'border-top-right-radius',\n    val => ({ '0': 'rounded-tr-none', '0px': 'rounded-tr-none' }[val] ?? (isUnit(val) ? `rounded-tr${((useAllDefaultValues && getBorderRadiusDefaultVal(val)) || `-[${getCustomVal(val)}]`).replace(/null$/, '')}` : ''))\n  ],\n  [\n    'border-top-style',\n    val => ((propertyMap.get('border-style') as Record<string, string>)[val] ? `[border-top-style:${val}]` : '')\n  ],\n  [\n    'border-top-width',\n    val => ((isUnit(val) ? `border-t-[${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'border-width',\n    val => ((isUnit(val) ? `border-[${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'bottom',\n    val => {\n      const t = hasNegative(val)\n      return (isUnit(val) ? `${t[0]}bottom-${getUnitMetacharactersVal(t[1], [CustomSelect.vw, CustomSelect.vh]) || `[${t[1]}]`}` : '')\n    }\n  ],\n  [\n    'box-align',\n    {\n      'initial': '[box-align:initial]',\n      'start': '[box-align:inherit]',\n      'end': '[box-align:unset]',\n      'center': '[box-align:unset]',\n      'baseline': '[box-align:unset]',\n      'stretch': '[box-align:unset]'\n    }\n  ],\n  [\n    'box-decoration-break',\n    {\n      \"slice\": \"decoration-slice\", \"clone\": \"decoration-clone\"\n    }\n  ],\n  [\n    'box-direction',\n    {\n      'initial': '[box-direction:initial]',\n      'normal': '[box-direction:normal]',\n      'reverse': '[box-direction:reverse]',\n      'inherit': '[box-direction:inherit]'\n    }\n  ],\n  [\n    'box-flex',\n    val => (`[box-flex:${getCustomVal(val)}]`)\n  ],\n  [\n    'box-flex-group',\n    val => (`[box-flex-group:${getCustomVal(val)}]`)\n  ],\n  [\n    'box-lines',\n    {\n      'single': '[box-lines:single]', 'multiple': '[box-lines:multiple]', 'initial': '[box-lines:initial]'\n    }\n  ],\n  [\n    'box-ordinal-group',\n    val => (`[box-ordinal-group:${getCustomVal(val)}]`)\n  ],\n  [\n    'box-orient',\n    {\n      'horizontal': '[box-orient:horizontal]', 'vertical': '[box-orient:vertical]', 'inline-axis': '[box-orient:inline-axis]', 'block-axis': '[box-orient:block-axis]', 'inherit': '[box-orient:inherit]', 'initial': '[box-orient:initial]'\n    }\n  ],\n  [\n    'box-pack',\n    {\n      'start': '[box-pack:start]', 'end': '[box-pack:end]', 'center': '[box-pack:center]', 'justify': '[box-pack:justify]', 'initial': '[box-pack:initial]'\n    }\n  ],\n  [\n    'box-shadow',\n    val => (`[box-shadow:${getCustomVal(val)}]`)\n  ],\n  [\n    'box-sizing',\n    {\n      'border-box': 'box-border', 'content-box': 'box-content'\n    }\n  ],\n  [\n    'caption-side',\n    {\n      'top': '[caption-side:top]', 'bottom': '[caption-side:bottom]', 'inherit': '[caption-side:inherit]', 'initial': '[caption-side:initial]'\n    }\n  ],\n  [\n    'clear',\n    {\n      'left': 'clear-left', 'right': 'clear-right', 'both': 'clear-both', 'none': 'clear-none'\n    }\n  ],\n  [\n    'clip',\n    val => (`[clip:${getCustomVal(val)}]`)\n  ],\n  [\n    'clip-path',\n    val => (`[clip-path:${getCustomVal(val)}]`)\n  ],\n  [\n    'color',\n    val => ({ 'transparent': 'text-transparent', 'currentColor': 'text-current', 'currentcolor': 'text-current' }[val] ?? (isColor(val, true) ? `text-[${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'color-scheme',\n    val => (`[color-scheme:${getCustomVal(val)}]`)\n  ],\n  [\n    'column-count',\n    val => (`[column-count:${getCustomVal(val)}]`)\n  ],\n  [\n    'column-fill',\n    {\n      'balance': '[column-fill:balance]', 'auto': '[column-fill:auto]', 'initial': '[column-fill:initial]'\n    }\n  ],\n  [\n    'column-gap',\n    val => ({ '0': 'gap-x-0' }[val] ?? (isUnit(val) ? `gap-x-[${val}]` : ''))\n  ],\n  [\n    'column-rule',\n    val => (`[column-rule:${getCustomVal(val)}]`)\n  ],\n  [\n    'column-rule-color',\n    val => (isColor(val, true) ? `[column-rule-color:${getCustomVal(val)}]` : '')\n  ],\n  [\n    'column-rule-style',\n    {\n      'none': '[column-rule-style:none]', 'hidden': '[column-rule-style:hidden]', 'dotted': '[column-rule-style:dotted]', 'dashed': '[column-rule-style:dashed]', 'solid': '[column-rule-style:solid]', 'double': '[column-rule-style:double]', 'groove': '[column-rule-style:groove]', 'ridge': '[column-rule-style:ridge]', 'inset': '[column-rule-style:inset]', 'outset': '[column-rule-style:outset]', 'initial': '[column-rule-style:initial]'\n    }\n  ],\n  [\n    'column-rule-width',\n    val => ((isUnit(val) ? `[column-rule-width:${val}]` : ''))\n  ],\n  [\n    'column-span',\n    val => (`[column-span:${getCustomVal(val)}]`)\n  ],\n  [\n    'column-width',\n    val => ((isUnit(val) ? `[column-width:${val}]` : ''))\n  ],\n  [\n    'columns',\n    val => (`[columns:${getCustomVal(val)}]`)\n  ],\n  [\n    'contain-intrinsic-size',\n    val => (`[contain-intrinsic-size:${getCustomVal(val)}]`)\n  ],\n  [\n    'content',\n    val => (`content-[${getCustomVal(val)}]`)\n  ],\n  [\n    'content-visibility',\n    val => (`[content-visibility:${getCustomVal(val)}]`)\n  ],\n  [\n    'counter-increment',\n    val => (`[content-increment:${getCustomVal(val)}]`)\n  ],\n  [\n    'counter-reset',\n    val => (`[counter-reset:${getCustomVal(val)}]`)\n  ],\n  [\n    'counter-set',\n    val => (`[counter-set:${getCustomVal(val)}]`)\n  ],\n  [\n    'cursor',\n    {\n      'auto': 'cursor-auto', 'default': 'cursor-default', 'pointer': 'cursor-pointer', 'wait': 'cursor-wait', 'text': 'cursor-text', 'move': 'cursor-move', 'help': 'cursor-help', 'not-allowed': 'cursor-not-allowed'\n    }\n  ],\n  [\n    'direction',\n    {\n      'ltr': '[direction:ltr]', 'rtl': '[direction:rtl]', 'inherit': '[direction:inherit]', 'initial': '[direction:initial]'\n    }\n  ],\n  [\n    'display',\n    {\n      'block': 'block', 'inline-block': 'inline-block', 'inline': 'inline', 'flex': 'flex', 'inline-flex': 'inline-flex', 'table': 'table', 'inline-table': 'inline-table', 'table-caption': 'table-caption', 'table-cell': 'table-cell', 'table-column': 'table-column', 'table-column-group': 'table-column-group', 'table-footer-group': 'table-footer-group', 'table-header-group': 'table-header-group', 'table-row-group': 'table-row-group', 'table-row': 'table-row', 'flow-root': 'flow-root', 'grid': 'grid', 'inline-grid': 'inline-grid', 'contents': 'contents', 'list-item': 'list-item', 'none': 'hidden'\n    }\n  ],\n  [\n    'empty-cells',\n    {\n      'hide': '[empty-cells:hide]', 'show': '[empty-cells:show]', 'inherit': '[empty-cells:inherit]', 'initial': '[empty-cells:initial]'\n    }\n  ],\n  [\n    'fill',\n    val => ({ 'currentColor': 'fill-current', 'currentcolor': 'fill-current' }[val] ?? (isColor(val, true) ? `fill-[${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'filter',\n    val => {\n      const defaultVal = { 'none': 'filter-none' }[val]\n      if (defaultVal) {\n        return defaultVal\n      }\n      const filterValConfig: Record<string, ((v: string) => string)> = {\n        blur: (v: string) => `blur-${customTheme[\"blur\"]?.[v] ?? `[${v}]`}`,\n        brightness: (v: string) => `brightness-${customTheme[\"brightness\"]?.[v] ?? `[${v}]`}`,\n        contrast: (v: string) => `contrast-${customTheme[\"contrast\"]?.[v] ?? `[${v}]`}`,\n        grayscale: (v: string) => `grayscale-${customTheme[\"grayscale\"]?.[v] ?? `[${v}]`}`,\n        'hue-rotate': (v: string) => {\n          const t = hasNegative(v)\n          return `${t[0]}hue-rotate-${customTheme[\"grayscale\"]?.[t[1]] ?? `[${t[1]}]`}`\n        },\n        invert: (v: string) => `invert-${customTheme[\"invert\"]?.[v] ?? `[${v}]`}`,\n        saturate: (v: string) => `saturate-${customTheme[\"saturate\"]?.[v] ?? `[${v}]`}`,\n        sepia: (v: string) => `sepia-${customTheme[\"sepia\"]?.[v] ?? `[${v}]`}`\n      }\n      const vals = getCustomVal(val).replace(/\\(.+?\\)/g, v => v.replace(/_/g, '')).split(')_').map(v => `${v})`)\n      vals[vals.length - 1] = vals[vals.length - 1].slice(0, -1)\n\n      let canUse = true\n      const res = vals.map(v => {\n        let canUsePipeV = false\n        let pipeV = ''\n        if (useAllDefaultValues) {\n          pipeV = getFilterDefaultVal(v) ?? ''\n          if (pipeV.length > 0) {\n            canUsePipeV = true\n          }\n        }\n        pipeV = pipeV.length > 0 ? pipeV : v.replace(/^([a-zA-Z0-9_-]+)\\((.+?)\\)$/, (_r, k: string, v) => {\n          canUsePipeV = true\n          return filterValConfig[k]?.(v) ?? (canUse = false)\n        })\n        return canUsePipeV ? pipeV : ''\n      })\n      return canUse ? `filter ${[...new Set(res)].join(' ')}` : `[filter:${getCustomVal(val)}]`\n    }\n  ],\n  [\n    'flex',\n    val => ({ '1 1 0%': 'flex-1', '1 1 auto': 'flex-auto', '0 1 auto': 'flex-initial', 'none': 'flex-none' }[val] ?? `flex-[${getCustomVal(val)}]`)\n  ],\n  [\n    'flex-basis',\n    val => ((isUnit(val) ? `[flex-basis:${val}]` : ''))\n  ],\n  [\n    'flex-direction',\n    {\n      'row': 'flex-row', 'row-reverse': 'flex-row-reverse', 'column': 'flex-col', 'column-reverse': 'flex-col-reverse'\n    }\n  ],\n  [\n    'flex-flow',\n    val => (`[flex-flow:${getCustomVal(val)}]`)\n  ],\n  [\n    'flex-grow',\n    val => ((isUnit(val) ? ({ '0': 'flex-grow-0', '1': 'flex-grow' }[val] ?? `flex-grow-[${val}]`) : ''))\n  ],\n  [\n    'flex-shrink',\n    val => ((isUnit(val) ? ({ '0': 'flex-shrink-0', '1': 'flex-shrink' }[val] ?? `flex-shrink-[${val}]`) : ''))\n  ],\n  [\n    'flex-wrap',\n    {\n      'wrap': 'flex-wrap', 'wrap-reverse': 'flex-wrap-reverse', 'nowrap': 'flex-nowrap'\n    }\n  ],\n  [\n    'float',\n    {\n      'right': 'float-right', 'left': 'float-left', 'none': 'float-none'\n    }\n  ],\n  [\n    'font',\n    val => (`[font:${getCustomVal(val)}]`)\n  ],\n  [\n    'font-family',\n    val => (`font-[${getCustomVal(val)}]`)\n  ],\n  [\n    'font-size',\n    val => ((isUnit(val) ? `text-[${val}]` : ''))\n  ],\n  [\n    'font-size-adjust',\n    val => ((isUnit(val) ? `[font-size-adjust:${val}]` : ''))\n  ],\n  [\n    '-webkit-font-smoothing',\n    {\n      'antialiased': 'antialiased', 'auto': 'subpixel-antialiased'\n    }\n  ],\n  [\n    '-moz-osx-font-smoothing',\n    {\n      'grayscale': 'antialiased', 'auto': 'subpixel-antialiased'\n    }\n  ],\n  [\n    'font-stretch',\n    {\n      'wider': '[font-stretch:wider]', 'narrower': '[font-stretch:narrower]', 'ultra-condensed': '[font-stretch:ultra-condensed]', 'extra-condensed': '[font-stretch:extra-condensed]', 'condensed': '[font-stretch:condensed]', 'semi-condensed': '[font-stretch:semi-condensed]', 'normal': '[font-stretch:normal]', 'semi-expanded': '[font-stretch:semi-expanded]', 'expanded': '[font-stretch:expanded]', 'extra-expanded': '[font-stretch:extra-expanded]', 'ultra-expanded': '[font-stretch:ultra-expanded]', 'inherit': '[font-stretch:inherit]', 'initial': '[font-stretch:initial]'\n    }\n  ],\n  [\n    'font-style',\n    {\n      'italic': 'italic', 'normal': 'not-italic'\n    }\n  ],\n  [\n    'font-variant',\n    {\n      'normal': '[font-variant:normal]', 'small-caps': '[font-variant:small-caps]', 'inherit': '[font-variant:inherit]', 'initial': '[font-variant:initial]'\n    }\n  ],\n  [\n    'font-variant-numeric',\n    {\n      'normal': 'normal-nums', 'ordinal': 'ordinal', 'slashed-zero': 'slashed-zero', 'lining-nums': 'lining-nums', 'oldstyle-nums': 'oldstyle-nums', 'proportional-nums': 'proportional-nums', 'tabular-nums': 'tabular-nums', 'diagonal-fractions': 'diagonal-fractions', 'stacked-fractions': 'stacked-fractions'\n    }\n  ],\n  [\n    'font-variation-settings',\n    val => (`[font-variation-settings:${getCustomVal(val)}]`)\n  ],\n  [\n    'font-weight',\n    val => ((isUnit(val) ? `font-[${val}]` : ''))\n  ],\n  [\n    'gap',\n    val => ({ '0': 'gap-0' }[val] ?? (isUnit(val) ? `gap-[${val}]` : ''))\n  ],\n  [\n    'grid',\n    val => (`[grid:${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-area',\n    val => (`[grid-area:${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-auto-columns',\n    val => ({\n      'auto': 'auto-cols-auto', 'min-content': 'auto-cols-min', 'max-content': 'auto-cols-max', 'minmax(0, 1fr)': 'auto-cols-fr'\n    }[val] ?? `auto-cols-[${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-auto-flow',\n    val => ({\n      'row': 'grid-flow-row', 'column': 'grid-flow-col', 'row_dense': 'grid-flow-row-dense', 'column_dense': 'grid-flow-col-dense'\n    }[getCustomVal(val)] ?? '')\n  ],\n  [\n    'grid-auto-rows',\n    val => ({\n      'auto': 'auto-rows-auto', 'min-content': 'auto-rows-min', 'max-content': 'auto-rows-max', 'minmax(0, 1fr)': 'auto-rows-fr'\n    }[val] ?? `auto-rows-[${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-column',\n    val => ({\n      'auto': 'col-auto',\n      'span 1 / span 1': 'col-span-1',\n      'span 2 / span 2': 'col-span-2',\n      'span 3 / span 3': 'col-span-3',\n      'span 4 / span 4': 'col-span-4',\n      'span 5 / span 5': 'col-span-5',\n      'span 6 / span 6': 'col-span-6',\n      'span 7 / span 7': 'col-span-7',\n      'span 8 / span 8': 'col-span-8',\n      'span 9 / span 9': 'col-span-9',\n      'span 10 / span 10': 'col-span-10',\n      'span 11 / span 11': 'col-span-11',\n      'span 12 / span 12': 'col-span-12',\n      '1 / -1': 'col-span-full'\n    }[val] ?? `col-[${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-column-end',\n    val => ({\n      '1': 'col-end-1',\n      '2': 'col-end-2',\n      '3': 'col-end-3',\n      '4': 'col-end-4',\n      '5': 'col-end-5',\n      '6': 'col-end-6',\n      '7': 'col-end-7',\n      '8': 'col-end-8',\n      '9': 'col-end-9',\n      '10': 'col-end-10',\n      '11': 'col-end-11',\n      '12': 'col-end-12',\n      '13': 'col-end-13',\n      auto: 'col-end-auto'\n    }[val] ?? `col-end-[${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-column-gap',\n    val => ({ '0': 'gap-x-0' }[val] ?? (isUnit(val) ? `gap-x-[${val}]` : ''))\n  ],\n  [\n    'grid-column-start',\n    val => ({\n      '1': 'col-start-1',\n      '2': 'col-start-2',\n      '3': 'col-start-3',\n      '4': 'col-start-4',\n      '5': 'col-start-5',\n      '6': 'col-start-6',\n      '7': 'col-start-7',\n      '8': 'col-start-8',\n      '9': 'col-start-9',\n      '10': 'col-start-10',\n      '11': 'col-start-11',\n      '12': 'col-start-12',\n      '13': 'col-start-13',\n      'auto': 'col-start-auto'\n    }[val] ?? `col-start-[${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-gap',\n    val => ({ '0': 'gap-0' }[val] ?? (isUnit(val) ? `gap-[${val}]` : ''))\n  ],\n  [\n    'grid-row',\n    val => ({\n      'auto': 'row-auto',\n      'span 1 / span 1': 'row-span-1',\n      'span 2 / span 2': 'row-span-2',\n      'span 3 / span 3': 'row-span-3',\n      'span 4 / span 4': 'row-span-4',\n      'span 5 / span 5': 'row-span-5',\n      'span 6 / span 6': 'row-span-6',\n      '1 / -1': 'row-span-full'\n    }[val] ?? `row-[${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-row-end',\n    val => ({\n      '1': 'row-end-1',\n      '2': 'row-end-2',\n      '3': 'row-end-3',\n      '4': 'row-end-4',\n      '5': 'row-end-5',\n      '6': 'row-end-6',\n      '7': 'row-end-7',\n      auto: 'row-end-auto'\n    }[val] ?? `row-end-[${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-row-gap',\n    val => ({ '0': 'gap-y-0' }[val] ?? (isUnit(val) ? `gap-y-[${val}]` : ''))\n  ],\n  [\n    'grid-row-start',\n    val => ({\n      '1': 'row-start-1',\n      '2': 'row-start-2',\n      '3': 'row-start-3',\n      '4': 'row-start-4',\n      '5': 'row-start-5',\n      '6': 'row-start-6',\n      '7': 'row-start-7',\n      'auto': 'row-start-auto'\n    }[val] ?? `row-start-[${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-rows',\n    val => (`[grid-rows:${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-template',\n    val => (`[grid-template:${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-template-areas',\n    val => (`[grid-template-areas:${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-template-columns',\n    val => ({\n      'repeat(1,minmax(0,1fr))': 'grid-cols-1', 'repeat(2,minmax(0,1fr))': 'grid-cols-2', 'repeat(3,minmax(0,1fr))': 'grid-cols-3', 'repeat(4,minmax(0,1fr))': 'grid-cols-4', 'repeat(5,minmax(0,1fr))': 'grid-cols-5', 'repeat(6,minmax(0,1fr))': 'grid-cols-6', 'repeat(7,minmax(0,1fr))': 'grid-cols-7', 'repeat(8,minmax(0,1fr))': 'grid-cols-8', 'repeat(9,minmax(0,1fr))': 'grid-cols-9', 'repeat(10,minmax(0,1fr))': 'grid-cols-10', 'repeat(11,minmax(0,1fr))': 'grid-cols-11', 'repeat(12,minmax(0,1fr))': 'grid-cols-12', 'none': 'grid-cols-none'\n    }[getCustomVal(val).replace(/_/g, '')] ?? `grid-cols-[${getCustomVal(val)}]`)\n  ],\n  [\n    'grid-template-rows',\n    val => ({\n      'repeat(1,minmax(0,1fr))': 'grid-rows-1', 'repeat(2,minmax(0,1fr))': 'grid-rows-2', 'repeat(3,minmax(0,1fr))': 'grid-rows-3', 'repeat(4,minmax(0,1fr))': 'grid-rows-4', 'repeat(5,minmax(0,1fr))': 'grid-rows-5', 'repeat(6,minmax(0,1fr))': 'grid-rows-6', 'none': 'grid-rows-none'\n    }[getCustomVal(val).replace(/_/g, '')] ?? `grid-rows-[${getCustomVal(val)}]`)\n  ],\n  [\n    'hanging-punctuation',\n    {\n      'none': '[hanging-punctuation:none]', 'first': '[hanging-punctuation:first]', 'last': '[hanging-punctuation:last]', 'allow-end': '[hanging-punctuation:allow-end]', 'force-end': '[hanging-punctuation:force-end]', 'initial': '[hanging-punctuation:initial]'\n    }\n  ],\n  [\n    'height',\n    val => (isUnit(val) ? `h-${getUnitMetacharactersVal(val, [CustomSelect.vw]) || `[${val}]`}` : '')\n  ],\n  [\n    'icon',\n    val => (`[icon:${getCustomVal(val)}]`)\n  ],\n  [\n    'image-orientation',\n    val => (`[image-orientation:${getCustomVal(val)}]`)\n  ],\n  [\n    'justify-content',\n    {\n      'flex-start': 'justify-start', 'flex-end': 'justify-end', 'center': 'justify-center', 'space-between': 'justify-between', 'space-around': 'justify-around', 'space-evenly': 'justify-evenly'\n    }\n  ],\n  [\n    'justify-items',\n    {\n      'start': 'justify-items-start', 'end': 'justify-items-end', 'center': 'justify-items-center', 'stretch': 'justify-items-stretch'\n    }\n  ],\n  [\n    'justify-self',\n    {\n      'auto': 'justify-self-auto', 'start': 'justify-self-start', 'end': 'justify-self-end', 'center': 'justify-self-center', 'stretch': 'justify-self-stretch'\n    }\n  ],\n  [\n    'left',\n    val => {\n      const t = hasNegative(val)\n      return (isUnit(val) ? `${t[0]}left-${getUnitMetacharactersVal(t[1], [CustomSelect.vw, CustomSelect.vh]) || `[${t[1]}]`}` : '')\n    }\n  ],\n  [\n    'letter-spacing',\n    val => ({ '-0.05em': 'tracking-tighter', '-0.025em': 'tracking-tight', '0em': 'tracking-normal', '0.025em': 'tracking-wide', '0.05em': 'tracking-wider', '0.1em': 'tracking-widest' }[val] ?? (isUnit(val) ? `tracking-[${val}]` : ''))\n  ],\n  [\n    'line-height',\n    val => ({ '1': 'leading-none', '2': 'leading-loose', '1.25': 'leading-tight', '1.375': 'leading-snug', '1.5': 'leading-normal', '1.625': 'leading-relaxed' }[val] ?? (isUnit(val) ? `leading-[${val}]` : ''))\n  ],\n  [\n    'list-style',\n    val => (`[list-style:${getCustomVal(val)}]`)\n  ],\n  [\n    'list-style-image',\n    val => (`[list-style-image:${getCustomVal(val)}]`)\n  ],\n  [\n    'list-style-position',\n    val => ({\n      'inside': 'list-inside', 'outside': 'list-outside'\n    }[val] ?? `[list-style-position:${getCustomVal(val)}]`)\n  ],\n  [\n    'list-style-type',\n    val => ({\n      'none': 'list-none', 'disc': 'list-disc', 'decimal': 'list-decimal'\n    }[val] ?? `list-[${getCustomVal(val)}]`)\n  ],\n  [\n    'logical-height',\n    val => ((isUnit(val) ? `[logical-height:${val}]` : ''))\n  ],\n  [\n    'logical-width',\n    val => ((isUnit(val) ? `[logical-width:${val}]` : ''))\n  ],\n  [\n    'isolation',\n    {\n      \"isolate\": \"isolate\", \"auto\": \"isolation-auto\"\n    }\n  ],\n  [\n    'margin',\n    val => {\n      const getPipeVal = (val: string) => {\n        const r = ({ '0': 'm_0', '0px': 'm_0', 'auto': 'm_auto' }[val])\n        if (r) {\n          return r\n        }\n        let vals = val.split(' ').filter(v => v !== '')\n        if (vals.filter(v => !isUnit(v)).length > 0) {\n          return ''\n        }\n        if (useAllDefaultValues) {\n          vals = vals.map(v => getRemDefaultVal(v) ?? `[${v}]`)\n        } else {\n          vals = vals.map(v => `[${v}]`)\n        }\n        if (vals.length === 1 || new Set(vals).size === 1) {\n          return `m_${vals[0]}`\n        } else if (vals.length === 2) {\n          return `mx_${vals[1]} my_${vals[0]}`\n        } else if (vals.length === 3) {\n          if (vals[0] === vals[2]) {\n            return `mx_${vals[1]} my_${vals[0]}`\n          }\n          return `mt_${vals[0]} mx_${vals[1]} mb_${vals[2]}`\n        } else if (vals.length === 4) {\n          if (vals[0] === vals[2]) {\n            if (vals[1] === vals[3]) {\n              return `mx_${vals[1]} my_${vals[0]}`\n            }\n            return `ml_${vals[3]} mr_${vals[1]} my_${vals[0]}`\n          }\n          if (vals[1] === vals[3]) {\n            if (vals[0] === vals[2]) {\n              return `mx_${vals[1]} my_${vals[0]}`\n            }\n            return `ml_${vals[3]} mr_${vals[1]} my_${vals[0]}`\n          }\n          return `mt_${vals[0]} mr_${vals[1]} mb_${vals[2]} ml_${vals[3]}`\n        }\n        return ''\n      }\n      const v = getPipeVal(val)\n      return v === '' ? '' : (v.split(' ').map(t => t.includes('-') ? `-${t.replace('-', '').replace('_', '-')}` : t.replace('_', '-')).join(' '))\n    }\n  ],\n  [\n    'margin-bottom',\n    val => {\n      const t = hasNegative(val)\n      return { '0': 'mb-0', '0px': 'mb-0', 'auto': 'mb-auto' }[val] ?? (isUnit(val) ? `${t[0]}mb-${(useAllDefaultValues && getRemDefaultVal(t[1])) || `[${t[1]}]`}` : '')\n    }\n  ],\n  [\n    'margin-left',\n    val => {\n      const t = hasNegative(val)\n      return { '0': 'ml-0', '0px': 'ml-0', 'auto': 'ml-auto' }[val] ?? (isUnit(val) ? `${t[0]}ml-${(useAllDefaultValues && getRemDefaultVal(t[1])) || `[${t[1]}]`}` : '')\n    }\n  ],\n  [\n    'margin-right',\n    val => {\n      const t = hasNegative(val)\n      return { '0': 'mr-0', '0px': 'mr-0', 'auto': 'mr-auto' }[val] ?? (isUnit(val) ? `${t[0]}mr-${(useAllDefaultValues && getRemDefaultVal(t[1])) || `[${t[1]}]`}` : '')\n    }\n  ],\n  [\n    'margin-top',\n    val => {\n      const t = hasNegative(val)\n      return { '0': 'mt-0', '0px': 'mt-0', 'auto': 'mt-auto' }[val] ?? (isUnit(val) ? `${t[0]}mt-${(useAllDefaultValues && getRemDefaultVal(t[1])) || `[${t[1]}]`}` : '')\n    }\n  ],\n  [\n    'mask',\n    val => (`[mask:${getCustomVal(val)}]`)\n  ],\n  [\n    'mask-clip',\n    val => (`[mask-clip:${getCustomVal(val)}]`)\n  ],\n  [\n    'mask-composite',\n    val => (`[mask-composite:${getCustomVal(val)}]`)\n  ],\n  [\n    'mask-image',\n    val => (`[mask-image:${getCustomVal(val)}]`)\n  ],\n  [\n    'mask-origin',\n    val => (`[mask-origin:${getCustomVal(val)}]`)\n  ],\n  [\n    'mask-position',\n    val => (`[mask-position:${getCustomVal(val)}]`)\n  ],\n  [\n    'mask-repeat',\n    val => (`[mask-repeat:${getCustomVal(val)}]`)\n  ],\n  [\n    'mask-size',\n    val => (`[mask-size:${getCustomVal(val)}]`)\n  ],\n  [\n    'max-height',\n    val => (isUnit(val) ? ({ \"0px\": \"max-h-0\", \"100%\": \"max-h-full\", \"100vh\": \"max-h-screen\" }[val] ?? `[${val}]`) : '')\n  ],\n  [\n    'max-width',\n    val => (isUnit(val) ? ({ \"none\": \"max-w-none\", \"100%\": \"max-w-full\", \"min-content\": \"max-w-min\", \"max-content\": \"max-w-max\" }[val] ?? `[${val}]`) : '')\n  ],\n  [\n    'min-height',\n    val => (isUnit(val) ? ({ \"0px\": \"min-h-0\", \"100%\": \"min-h-full\", \"100vh\": \"min-h-screen\" }[val] ?? `[${val}]`) : '')\n  ],\n  [\n    'min-width',\n    val => (isUnit(val) ? ({ \"0px\": \"min-w-0\", \"100%\": \"min-w-full\", \"min-content\": \"min-w-min\", \"max-content\": \"min-w-max\" }[val] ?? `[${val}]`) : '')\n  ],\n  [\n    'mix-blend-mode',\n    {\n      'normal': 'mix-blend-normal', 'multiply': 'mix-blend-multiply', 'screen': 'mix-blend-screen', 'overlay': 'mix-blend-overlay', 'darken': 'mix-blend-darken', 'lighten': 'mix-blend-lighten', 'color-dodge': 'mix-blend-color-dodge', 'color-burn': 'mix-blend-color-burn', 'hard-light': 'mix-blend-hard-light', 'soft-light': 'mix-blend-soft-light', 'difference': 'mix-blend-difference', 'exclusion': 'mix-blend-exclusion', 'hue': 'mix-blend-hue', 'saturation': 'mix-blend-saturation', 'color': 'mix-blend-color', 'luminosity': 'mix-blend-luminosity'\n    }\n  ],\n  [\n    'nav-down',\n    val => (`[nav-down:${getCustomVal(val)}]`)\n  ],\n  [\n    'nav-index',\n    val => ((isUnit(val) ? `[nav-index:${val}]` : ''))\n  ],\n  [\n    'nav-left',\n    val => ((isUnit(val) ? `[nav-left:${val}]` : ''))\n  ],\n  [\n    'nav-right',\n    val => ((isUnit(val) ? `[nav-right:${val}]` : ''))\n  ],\n  [\n    'nav-up',\n    val => ((isUnit(val) ? `[nav-up:${val}]` : ''))\n  ],\n  [\n    'object-fit',\n    {\n      'contain': 'object-contain', 'cover': 'object-cover', 'fill': 'object-fill', 'none': 'object-none', 'scale-down': 'object-scale-down'\n    }\n  ],\n  [\n    'object-position',\n    val => ({\n      'bottom': 'object-bottom', 'center': 'object-center', 'left': 'object-left', 'left_bottom': 'object-left-bottom', 'left_top': 'object-left-top', 'right': 'object-right', 'right_bottom': 'object-right-bottom', 'right_top': 'object-right-top', 'top': 'object-top'\n    }[getCustomVal(val)] ?? '')\n  ],\n  [\n    'opacity',\n    val => ({ '0': 'opacity-0', '1': 'opacity-100', '0.05': 'opacity-5', '0.1': 'opacity-10', '0.2': 'opacity-20', '0.25': 'opacity-25', '0.3': 'opacity-30', '0.4': 'opacity-40', '0.5': 'opacity-50', '0.6': 'opacity-60', '0.7': 'opacity-70', '0.75': 'opacity-75', '0.8': 'opacity-80', '0.9': 'opacity-90', '0.95': 'opacity-95' }[val] ?? (isUnit(val) ? `opacity-[${val}]` : ''))\n  ],\n  [\n    'order',\n    val => ({ '0': 'order-none', '1': 'order-1', '2': 'order-2', '3': 'order-3', '4': 'order-4', '5': 'order-5', '6': 'order-6', '7': 'order-7', '8': 'order-8', '9': 'order-9', '10': 'order-10', '11': 'order-11', '12': 'order-12', '9999': 'order-last', '-9999': 'order-first' }[val] ?? (isUnit(val) ? `order-[${val}]` : ''))\n  ],\n  [\n    'outline',\n    val => (`outline-[${getCustomVal(val)}]`)\n  ],\n  [\n    'outline-color',\n    val => (isColor(val, true) ? `outline-[${getCustomVal(val)}]` : '')\n  ],\n  [\n    'outline-offset',\n    val => ((isUnit(val) ? `outline-offset-[${val}]` : ''))\n  ],\n  [\n    'outline-style',\n    {\n      'none': 'outline-[none]', 'dotted': 'outline-dotted', 'dashed': 'outline-dashed', 'solid': '[outline-style:solid]', 'double': 'outline-double', 'groove': '[outline-style:groove]', 'ridge': '[outline-style:ridge]', 'inset': '[outline-style:inset]', 'outset': '[outline-style:outset]'\n    }\n  ],\n  [\n    'outline-width',\n    val => ((isUnit(val) ? `outline-[${val}]` : ''))\n  ],\n  [\n    'overflow',\n    {\n      'auto': 'overflow-auto', 'hidden': 'overflow-hidden', 'visible': 'overflow-visible', 'scroll': 'overflow-scroll'\n    }\n  ],\n  [\n    'overflow-anchor',\n    val => (`[overflow-anchor:${getCustomVal(val)}]`)\n  ],\n  [\n    'overflow-wrap',\n    val => ({ 'break-word': 'break-words' }[val] ?? `[overflow-wrap:${getCustomVal(val)}]`)\n  ],\n  [\n    'overflow-x',\n    {\n      'auto': 'overflow-x-auto', 'hidden': 'overflow-x-hidden', 'visible': 'overflow-x-visible', 'scroll': 'overflow-x-scroll'\n    }\n  ],\n  [\n    'overflow-y',\n    {\n      'auto': 'overflow-y-auto', 'hidden': 'overflow-y-hidden', 'visible': 'overflow-y-visible', 'scroll': 'overflow-y-scroll'\n    }\n  ],\n  [\n    'overscroll-behavior',\n    {\n      'auto': 'overscroll-auto', 'contain': 'overscroll-contain', 'none': 'overscroll-none'\n    }\n  ],\n  [\n    'overscroll-behavior-x',\n    {\n      'auto': 'overscroll-x-auto', 'contain': 'overscroll-x-contain', 'none': 'overscroll-x-none'\n    }\n  ],\n  [\n    'overscroll-behavior-y',\n    {\n      'auto': 'overscroll-y-auto', 'contain': 'overscroll-y-contain', 'none': 'overscroll-y-none'\n    }\n  ],\n  [\n    'padding',\n    val => {\n      const r = ({ '0': 'p-0', '0px': 'p-0' }[val])\n      if (r) {\n        return r\n      }\n      let vals = val.split(' ').filter(v => v !== '')\n      if (vals.filter(v => !isUnit(v)).length > 0) {\n        return ''\n      }\n      if (useAllDefaultValues) {\n        vals = vals.map(v => getRemDefaultVal(v) ?? `[${v}]`)\n      } else {\n        vals = vals.map(v => `[${v}]`)\n      }\n      if (vals.length === 1 || new Set(vals).size === 1) {\n        return `p-${vals[0]}`\n      } else if (vals.length === 2) {\n        return `px-${vals[1]} py-${vals[0]}`\n      } else if (vals.length === 3) {\n        if (vals[0] === vals[2]) {\n          return `px-${vals[1]} py-${vals[0]}`\n        }\n        return `pt-${vals[0]} px-${vals[1]} pb-${vals[2]}`\n      } else if (vals.length === 4) {\n        if (vals[0] === vals[2]) {\n          if (vals[1] === vals[3]) {\n            return `px-${vals[1]} py-${vals[0]}`\n          }\n          return `pl-${vals[3]} pr-${vals[1]} py-${vals[0]}`\n        }\n        if (vals[1] === vals[3]) {\n          if (vals[0] === vals[2]) {\n            return `px-${vals[1]} py-${vals[0]}`\n          }\n          return `pl-${vals[3]} pr-${vals[1]} py-${vals[0]}`\n        }\n        return `pt-${vals[0]} pr-${vals[1]} pb-${vals[2]} pl-${vals[3]}`\n      }\n      return ''\n    }\n  ],\n  [\n    'padding-bottom',\n    val => ({ '0': 'pb-0', '0px': 'pb-0' }[val] ?? ((isUnit(val) ? `pb-${(useAllDefaultValues && getRemDefaultVal(val)) || `[${val}]`}` : '')))\n  ],\n  [\n    'padding-left',\n    val => ({ '0': 'pl-0', '0px': 'pl-0' }[val] ?? ((isUnit(val) ? `pl-${(useAllDefaultValues && getRemDefaultVal(val)) || `[${val}]`}` : '')))\n  ],\n  [\n    'padding-right',\n    val => ({ '0': 'pr-0', '0px': 'pr-0' }[val] ?? ((isUnit(val) ? `pr-${(useAllDefaultValues && getRemDefaultVal(val)) || `[${val}]`}` : '')))\n  ],\n  [\n    'padding-top',\n    val => ({ '0': 'pt-0', '0px': 'pt-0' }[val] ?? ((isUnit(val) ? `pt-${(useAllDefaultValues && getRemDefaultVal(val)) || `[${val}]`}` : '')))\n  ],\n  [\n    'page-break-after',\n    {\n      'auto': '[page-break-after:auto]', 'always': '[page-break-after:always]', 'avoid': '[page-break-after:avoid]', 'left': '[page-break-after:left]', 'right': '[page-break-after:right]', 'inherit': '[page-break-after:inherit]', 'initial': '[page-break-after:initial]'\n    }\n  ],\n  [\n    'page-break-before',\n    {\n      'auto': '[page-break-before:auto]', 'always': '[page-break-before:always]', 'avoid': '[page-break-before:avoid]', 'left': '[page-break-before:left]', 'right': '[page-break-before:right]', 'inherit': '[page-break-before:inherit]', 'initial': '[page-break-before:initial]'\n    }\n  ],\n  [\n    'page-break-inside',\n    {\n      'auto': '[page-break-inside:auto]', 'avoid': '[page-break-inside:avoid]', 'inherit': '[page-break-inside:inherit]', 'initial': '[page-break-inside:initial]'\n    }\n  ],\n  [\n    'perspective',\n    val => ((isUnit(val) ? `[perspective:${val}]` : ''))\n  ],\n  [\n    'perspective-origin',\n    val => (`[perspective-origin:${getCustomVal(val)}]`)\n  ],\n  [\n    'place-content',\n    {\n      'center': 'place-content-center', 'start': 'place-content-start', 'end': 'place-content-end', 'space-between': 'place-content-between', 'space-around': 'place-content-around', 'space-evenly': 'place-content-evenly', 'stretch': 'place-content-stretch'\n    }\n  ],\n  [\n    'place-items',\n    {\n      'start': 'place-items-start', 'end': 'place-items-end', 'center': 'place-items-center', 'stretch': 'place-items-stretch'\n    }\n  ],\n  [\n    'place-self',\n    {\n      'auto': 'place-self-auto', 'start': 'place-self-start', 'end': 'place-self-end', 'center': 'place-self-center', 'stretch': 'place-self-stretch'\n    }\n  ],\n  [\n    'pointer-events',\n    {\n      'none': 'pointer-events-none', 'auto': 'pointer-events-auto'\n    }\n  ],\n  [\n    'position',\n    {\n      'static': 'static', 'fixed': 'fixed', 'absolute': 'absolute', 'relative': 'relative', 'sticky': 'sticky'\n    }\n  ],\n  [\n    'punctuation-trim',\n    {\n      'none': '[punctuation-trim:none]', 'start': '[punctuation-trim:start]', 'end': '[punctuation-trim:end]', 'allow-end': '[punctuation-trim:allow-end]', 'adjacent': '[punctuation-trim:adjacent]', 'initial': '[punctuation-trim:initial]'\n    }\n  ],\n  [\n    'quotes',\n    val => (`[quotes:${getCustomVal(val)}]`)\n  ],\n  [\n    'resize',\n    {\n      'none': 'resize-none', 'vertical': 'resize-y', 'horizontal': 'resize-x', 'both': 'resize'\n    }\n  ],\n  [\n    'right',\n    val => {\n      const t = hasNegative(val)\n      return (isUnit(val) ? `${t[0]}right-${getUnitMetacharactersVal(t[1], [CustomSelect.vw, CustomSelect.vh]) || `[${t[1]}]`}` : '')\n    }\n  ],\n  [\n    'rotation',\n    val => (`[rotation:${getCustomVal(val)}]`)\n  ],\n  [\n    'row-gap',\n    val => ({ '0': 'gap-y-0' }[val] ?? (isUnit(val) ? `gap-y-[${val}]` : ''))\n  ],\n  [\n    'scroll-snap-align',\n    val => (`[scroll-snap-align:${getCustomVal(val)}]`)\n  ],\n  [\n    'scroll-snap-stop',\n    val => (`[scroll-snap-stop:${getCustomVal(val)}]`)\n  ],\n  [\n    'scroll-snap-type',\n    val => (`[scroll-snap-type:${getCustomVal(val)}]`)\n  ],\n  [\n    'scrollbar-width',\n    val => ((isUnit(val) ? `[scrollbar-width:${val}]` : ''))\n  ],\n  [\n    'shape-image-threshold',\n    val => (`[shape-image-threshold:${getCustomVal(val)}]`)\n  ],\n  [\n    'shape-margin',\n    val => (`[shape-margin:${getCustomVal(val)}]`)\n  ],\n  [\n    'shape-outside',\n    val => (`[shape-outside:${getCustomVal(val)}]`)\n  ],\n  [\n    'stroke',\n    val => ({\n      currentColor: 'stroke-current',\n      currentcolor: 'stroke-current'\n    }[val] ?? (isColor(val, true) ? `stroke-[${getCustomVal(val)}]` : ''))\n  ],\n  [\n    'stroke-width',\n    val => ((isUnit(val) ? `stroke-[${val}]` : ''))\n  ],\n  [\n    'tab-size',\n    val => ((isUnit(val) ? `[tab-size:${val}]` : ''))\n  ],\n  [\n    'table-layout',\n    {\n      'auto': 'table-auto', 'fixed': 'table-fixed'\n    }\n  ],\n  [\n    'target',\n    val => (`[target:${getCustomVal(val)}]`)\n  ],\n  [\n    'target-name',\n    val => (`[target-name:${getCustomVal(val)}]`)\n  ],\n  [\n    'target-new',\n    {\n      'window': '[target-new:window]', 'tab': '[target-new:tab]', 'none': '[target-new:none]', 'initial': '[target-new:initial]'\n    }\n  ],\n  [\n    'target-position',\n    {\n      'above': '[target-position:above]', 'behind': '[target-position:behind]', 'front': '[target-position:front]', 'back': '[target-position:back]', 'initial': '[target-position:initial]'\n    }\n  ],\n  [\n    'text-align',\n    {\n      'left': 'text-left', 'center': 'text-center', 'right': 'text-right', 'justify': 'text-justify'\n    }\n  ],\n  [\n    'text-align-last',\n    {\n      'auto': '[text-align-last:auto]', 'left': '[text-align-last:left]', 'right': '[text-align-last:right]', 'center': '[text-align-last:center]', 'justify': '[text-align-last:justify]', 'start': '[text-align-last:start]', 'end': '[text-align-last:end]', 'initial': '[text-align-last:initial]', 'inherit': '[text-align-last:inherit]'\n    }\n  ],\n  [\n    'text-decoration',\n    {\n      'underline': 'underline', 'line-through': 'line-through', 'none': 'no-underline'\n    }\n  ],\n  [\n    'text-decoration-color',\n    val => (isColor(val, true) ? `[text-decoration-color:${getCustomVal(val)}]` : '')\n  ],\n  [\n    'text-decoration-line',\n    {\n      'none': '[text-decoration-line:none]', 'underline': '[text-decoration-line:underline]', 'overline': '[text-decoration-line:overline]', 'line-through': '[text-decoration-line:line-through]', 'initial': '[text-decoration-line:initial]', 'inherit': '[text-decoration-line:inherit]'\n    }\n  ],\n  [\n    'text-decoration-skip-ink',\n    val => (`[text-decoration-skip-ink:${getCustomVal(val)}]`)\n  ],\n  [\n    'text-decoration-style',\n    {\n      'solid': '[text-decoration-style:solid]', 'double': '[text-decoration-style:double]', 'dotted': '[text-decoration-style:dotted]', 'dashed': '[text-decoration-style:dashed]', 'wavy': '[text-decoration-style:wavy]', 'initial': '[text-decoration-style:initial]', 'inherit': '[text-decoration-style:inherit]'\n    }\n  ],\n  [\n    'text-emphasis-color',\n    val => (isColor(val, true) ? `[text-emphasis-color:${getCustomVal(val)}]` : '')\n  ],\n  [\n    'text-emphasis-position',\n    val => (`[text-emphasis-position:${getCustomVal(val)}]`)\n  ],\n  [\n    'text-emphasis-style',\n    val => (`[text-emphasis-style:${getCustomVal(val)}]`)\n  ],\n  [\n    'text-indent',\n    val => ((isUnit(val) ? `[text-indent:${val}]` : ''))\n  ],\n  [\n    'text-justify',\n    {\n      'auto': '[text-justify:auto]', 'none': '[text-justify:none]', 'inter-word': '[text-justify:inter-word]', 'inter-ideograph': '[text-justify:inter-ideograph]', 'inter-cluster': '[text-justify:inter-cluster]', 'distribute': '[text-justify:distribute]', 'kashida': '[text-justify:kashida]', 'initial': '[text-justify:initial]'\n    }\n  ],\n  [\n    'text-orientation',\n    val => (`[text-orientation:${getCustomVal(val)}]`)\n  ],\n  [\n    'text-outline',\n    val => (`[text-outline:${getCustomVal(val)}]`)\n  ],\n  [\n    'text-overflow',\n    val => ({\n      'ellipsis': 'overflow-ellipsis', 'clip': 'overflow-clip'\n    }[val] ?? (`[text-overflow:${getCustomVal(val)}]`))\n  ],\n  [\n    'text-shadow',\n    val => (`[text-shadow:${getCustomVal(val)}]`)\n  ],\n  [\n    'text-transform',\n    {\n      'uppercase': 'uppercase', 'lowercase': 'lowercase', 'capitalize': 'capitalize', 'none': 'normal-case'\n    }\n  ],\n  [\n    'text-underline-offset',\n    val => (`[text-underline-offset:${getCustomVal(val)}]`)\n  ],\n  [\n    'text-underline-position',\n    val => (`[text-underline-position:${getCustomVal(val)}]`)\n  ],\n  [\n    'text-wrap',\n    {\n      'normal': '[text-wrap:normal]', 'none': '[text-wrap:none]', 'unrestricted': '[text-wrap:unrestricted]', 'suppress': '[text-wrap:suppress]', 'initial': '[text-wrap:initial]'\n    }\n  ],\n  [\n    'top',\n    val => {\n      const t = hasNegative(val)\n      return (isUnit(val) ? `${t[0]}top-${getUnitMetacharactersVal(t[1], [CustomSelect.vw, CustomSelect.vh]) || `[${t[1]}]`}` : '')\n    }\n  ],\n  [\n    'transform',\n    (val) => {\n      const defaultVal = { 'none': 'transform-none' }[val]\n      if (defaultVal) {\n        return defaultVal\n      }\n\n      const scaleDefaultVs: Record<string, string> = {\n        \"0\": \"0\", \"1\": \"100\", \".5\": \"50\", \".75\": \"75\", \".9\": \"90\", \".95\": \"95\", \"1.05\": \"105\", \"1.1\": \"110\", \"1.25\": \"125\", \"1.5\": \"150\"\n      }\n      const rotateDefaultVs: Record<string, string> = {\n        \"0deg\": \"0\", \"1deg\": \"1\", \"2deg\": \"2\", \"3deg\": \"3\", \"6deg\": \"6\", \"12deg\": \"12\", \"45deg\": \"45\", \"90deg\": \"90\", \"180deg\": \"180\"\n      }\n      const skewDefaultVs: Record<string, string> = {\n        \"0deg\": \"0\", \"1deg\": \"1\", \"2deg\": \"2\", \"3deg\": \"3\", \"6deg\": \"6\", \"12deg\": \"12\"\n      }\n      const translateDefaultVs: Record<string, string> = {\n        \"0px\": \"0\", \"1px\": \"px\", \"0.125rem\": \"0.5\", \"0.25rem\": \"1\", \"0.375rem\": \"1.5\", \"0.5rem\": \"2\", \"0.625rem\": \"2.5\", \"0.75rem\": \"3\", \"0.875rem\": \"3.5\", \"1rem\": \"4\", \"1.25rem\": \"5\", \"1.5rem\": \"6\", \"1.75rem\": \"7\", \"2rem\": \"8\", \"2.25rem\": \"9\", \"2.5rem\": \"10\", \"2.75rem\": \"11\", \"3rem\": \"12\", \"3.5rem\": \"14\", \"4rem\": \"16\", \"5rem\": \"20\", \"6rem\": \"24\", \"7rem\": \"28\", \"8rem\": \"32\", \"9rem\": \"36\", \"10rem\": \"40\", \"11rem\": \"44\", \"12rem\": \"48\", \"13rem\": \"52\", \"14rem\": \"56\", \"15rem\": \"60\", \"16rem\": \"64\", \"18rem\": \"72\", \"20rem\": \"80\", \"24rem\": \"96\", \"50%\": \"1/2\", \"33.33%\": \"1/3\", \"66.66%\": \"2/3\", \"25%\": \"1/4\", \"75%\": \"3/4\", \"100%\": \"full\"\n      }\n      const transformValConfig: Record<string, ((v: string) => string | undefined)> = {\n        scale: (v: string) => {\n          const vs = v.split(',')\n          if (vs.length === 3) {\n            return undefined\n          }\n          if (vs[0] === vs[1] || vs.length === 1) {\n            return `scale-${customTheme.scale?.[vs[0]] || (useAllDefaultValues && scaleDefaultVs[vs[0]]) || `[${vs[0]}]`}`\n          }\n          return vs.map((v, idx) => {\n            return `scale-${idx === 0 ? 'x' : 'y'}-${customTheme.scale?.[v] || (useAllDefaultValues && scaleDefaultVs[v]) || `[${v}]`}`\n          }).join(' ')\n        },\n        scaleX: (v: string) => `scale-x-${customTheme.scale?.[v] || (useAllDefaultValues && scaleDefaultVs[v]) || `[${v}]`}`,\n        scaleY: (v: string) => `scale-y-${customTheme.scale?.[v] || (useAllDefaultValues && scaleDefaultVs[v]) || `[${v}]`}`,\n        rotate: (v: string) => {\n          const vs = v.split(',')\n          if (vs.length > 1) {\n            if (vs.length === 3 && ['0', '0deg'].findIndex(v => v === vs[0]) > -1 && ['0', '0deg'].findIndex(v => v === vs[1]) > -1) {\n              const t = hasNegative(vs[2])\n              return `${t[0]}rotate-${customTheme.rotate?.[t[1]] || (useAllDefaultValues && rotateDefaultVs[t[1]]) || `[${t[1]}]`}`\n            }\n            return undefined\n          }\n          const t = hasNegative(vs[0])\n          return `${t[0]}rotate-${customTheme.rotate?.[t[1]] || (useAllDefaultValues && rotateDefaultVs[t[1]]) || `[${t[1]}]`}`\n        },\n        rotateZ: (v: string) => {\n          const t = hasNegative(v)\n          return `${t[0]}rotate-${customTheme.rotate?.[t[1]] || (useAllDefaultValues && rotateDefaultVs[t[1]]) || `[${t[1]}]`}`\n        },\n        translate: (v: string) => {\n          const vs = v.split(',')\n          if (vs.length === 3) {\n            return undefined\n          }\n          return vs.map((v, idx) => {\n            const t = hasNegative(v)\n            if (/^\\d+\\.[1-9]{2,}%$/.test(t[1])) {\n              t[1] = `${Number(t[1].slice(0, -1)).toFixed(6).replace(/(\\.[1-9]{2})\\d+/, '$1')}%`\n            }\n            return `${t[0]}translate-${idx === 0 ? 'x' : 'y'}-${customTheme.translate?.[t[1]] || (useAllDefaultValues && translateDefaultVs[t[1]]) || `[${t[1]}]`}`\n          }).join(' ')\n        },\n        translateX: (v: string) => {\n          const t = hasNegative(v)\n          if (/^\\d+\\.[1-9]{2,}%$/.test(t[1])) {\n            t[1] = `${Number(t[1].slice(0, -1)).toFixed(6).replace(/(\\.[1-9]{2})\\d+/, '$1')}%`\n          }\n          return `${t[0]}translate-x-${customTheme.translate?.[t[1]] || (useAllDefaultValues && translateDefaultVs[t[1]]) || `[${t[1]}]`}`\n        },\n        translateY: (v: string) => {\n          const t = hasNegative(v)\n          if (/^\\d+\\.[1-9]{2,}%$/.test(t[1])) {\n            t[1] = `${Number(t[1].slice(0, -1)).toFixed(6).replace(/(\\.[1-9]{2})\\d+/, '$1')}%`\n          }\n          return `${t[0]}translate-y-${customTheme.translate?.[t[1]] || (useAllDefaultValues && translateDefaultVs[t[1]]) || `[${t[1]}]`}`\n        },\n        skew: (v: string) => {\n          const vs = v.split(',')\n          if (vs.length === 3) {\n            return undefined\n          }\n          return vs.map((v, idx) => {\n            const t = hasNegative(v)\n            return `${t[0]}skew-${idx === 0 ? 'x' : 'y'}-${customTheme.skew?.[t[1]] || (useAllDefaultValues && skewDefaultVs[t[1]]) || `[${t[1]}]`}`\n          }).join(' ')\n        },\n        skewX: (v: string) => {\n          const t = hasNegative(v)\n          return `${t[0]}skew-x-${customTheme.skew?.[t[1]] || (useAllDefaultValues && skewDefaultVs[t[1]]) || `[${t[1]}]`}`\n        },\n        skewY: (v: string) => {\n          const t = hasNegative(v)\n          return `${t[0]}skew-y-${customTheme.skew?.[t[1]] || (useAllDefaultValues && skewDefaultVs[t[1]]) || `[${t[1]}]`}`\n        }\n      }\n      const vals = getCustomVal(val).replace(/\\(.+?\\)/g, v => v.replace(/_/g, '')).split(')_').map(v => `${v})`)\n      vals[vals.length - 1] = vals[vals.length - 1].slice(0, -1)\n\n      let canUse = true\n      const res = vals.map(v => {\n        let canUsePipeV = false\n        const pipeV = v.replace(/^([a-zA-Z0-9_-]+)\\((.+?)\\)$/, (_r, k: string, v) => {\n          canUsePipeV = true\n          const tmpRes = transformValConfig[k]?.(v) ?? (canUse = false)\n          return typeof tmpRes === 'string' ? tmpRes : ''\n        })\n        return canUsePipeV ? pipeV : ''\n      })\n      return canUse ? `transform ${[...new Set(res)].join(' ')}` : `[transform:${getCustomVal(val)}]`\n    }\n  ],\n  [\n    'transform-origin',\n    val => ({\n      'center': 'origin-center', 'top': 'origin-top', 'top_right': 'origin-top-right', 'right': 'origin-right', 'bottom_right': 'origin-bottom-right', 'bottom': 'origin-bottom', 'bottom_left': 'origin-bottom-left', 'left': 'origin-left', 'top_left': 'origin-top-left'\n    }[getCustomVal(val)] ?? `origin-[${getCustomVal(val)}]`)\n  ],\n  [\n    'transform-style',\n    {\n      'flat': '[transform-style:flat]', 'preserve-3d': '[transform-style:preserve-3d]', 'initial': '[transform-style:initial]'\n    }\n  ],\n  [\n    'transition',\n    val => {\n      if (val === 'none') {\n        return 'transition-none'\n      }\n      return `[transition:${getCustomVal(val)}]`\n    }\n  ],\n  [\n    'transition-delay',\n    val => {\n      val = val.replace(/^([.\\d]+)s$/, (_v, $1) => `${($1 * 1000).toFixed(6).replace(/\\.?0+$/, '')}ms`)\n      return ({\n        '75ms': 'delay-75', '100ms': 'delay-100', '150ms': 'delay-150', '200ms': 'delay-200', '300ms': 'delay-300', '500ms': 'delay-500', '700ms': 'delay-700', '1000ms': 'delay-1000'\n      }[val] ?? (/^[.\\d]+[ms]{1,2}$/.test(val) ? `delay-[${getCustomVal(val)}]` : ''))\n    }\n  ],\n  [\n    'transition-duration',\n    val => {\n      val = val.replace(/^([.\\d]+)s$/, (_v, $1) => `${($1 * 1000).toFixed(6).replace(/\\.?0+$/, '')}ms`)\n      return ({\n        '75ms': 'duration-75', '100ms': 'duration-100', '150ms': 'duration-150', '200ms': 'duration-200', '300ms': 'duration-300', '500ms': 'duration-500', '700ms': 'duration-700', '1000ms': 'duration-1000'\n      }[val] ?? (/^[.\\d]+[ms]{1,2}$/.test(val) ? `duration-[${getCustomVal(val)}]` : ''))\n    }\n  ],\n  [\n    'transition-property',\n    val => (`[transition-property:${getCustomVal(val)}]`)\n  ],\n  [\n    'transition-timing-function',\n    val => {\n      val = val.replace(/\\s/g, '')\n      return ({\n        'linear': 'ease-linear', 'cubic-bezier(0.4,0,1,1)': 'ease-in', 'cubic-bezier(0,0,0.2,1)': 'ease-out', 'cubic-bezier(0.4,0,0.2,1)': 'ease-in-out',\n        'ease': 'ease-[ease]', 'ease-in': 'ease-in', 'ease-out': 'ease-out', 'ease-in-out': 'ease-in-out'\n      }[val] ?? (val.startsWith('cubic-bezier') ? `ease-[${getCustomVal(val)}]` : ''))\n    }\n  ],\n  [\n    'unicode-bidi',\n    {\n      'normal': '[unicode-bidi:normal]', 'embed': '[unicode-bidi:embed]', 'bidi-override': '[unicode-bidi:bidi-override]', 'initial': '[unicode-bidi:initial]', 'inherit': '[unicode-bidi:inherit]'\n    }\n  ],\n  [\n    'user-select',\n    {\n      'none': 'select-none', 'text': 'select-text', 'all': 'select-all', 'auto': 'select-auto'\n    }\n  ],\n  [\n    'vertical-align',\n    {\n      'baseline': 'align-baseline', 'top': 'align-top', 'middle': 'align-middle', 'bottom': 'align-bottom', 'text-top': 'align-text-top', 'text-bottom': 'align-text-bottom'\n    }\n  ],\n  [\n    'visibility',\n    {\n      'visible': 'visible', 'hidden': 'invisible'\n    }\n  ],\n  [\n    'white-space',\n    {\n      'normal': 'whitespace-normal', 'nowrap': 'whitespace-nowrap', 'pre': 'whitespace-pre', 'pre-line': 'whitespace-pre-line', 'pre-wrap': 'whitespace-pre-wrap'\n    }\n  ],\n  [\n    'width',\n    val => (isUnit(val) ? `w-${(useAllDefaultValues && getRemDefaultVal(val)) || getUnitMetacharactersVal(val, [CustomSelect.vh]) || `[${val}]`}` : '')\n  ],\n  [\n    'word-break',\n    {\n      'break-all': 'break-all',\n      'normal': '[word-break:normal]', 'keep-all': '[word-break:keep-all]', 'initial': '[word-break:initial]'\n    }\n  ],\n  [\n    'word-spacing',\n    val => ((isUnit(val) ? `[word-spacing:${val}]` : ''))\n  ],\n  [\n    'word-wrap',\n    {\n      'normal': '[word-wrap:normal]', 'break-word': '[word-wrap:break-word]', 'initial': '[word-wrap:initial]'\n    }\n  ],\n  [\n    'writing-mode',\n    val => (`[writing-mode:${getCustomVal(val)}]`)\n  ],\n  [\n    'z-index',\n    val => ({\n      '0': 'z-0', '10': 'z-10', '20': 'z-20', '30': 'z-30', '40': 'z-40', '50': 'z-50', 'auto': 'z-auto'\n    }[val] ?? (typeof val === 'number' ? `z-[${val}]` : ''))\n  ]\n])\n\n\nconst parsingCode = (code: string): CssCodeParse[] => {\n  code = code.replace(/[\\n\\r]/g, '').trim()\n  const tmpCodes: CssCodeParse[] = []\n  let index = 0\n  let isSelectorName = true\n  let bracketsCount = 0\n  for (let i = 0; i < code.length; i++) {\n    const char = code[i]\n    if (['{', '}'].includes(char)) {\n      if (char === '{') {\n        if (bracketsCount++ === 0) {\n          isSelectorName = false\n        } else {\n          tmpCodes[index][isSelectorName ? 'selectorName' : 'cssCode'] += char\n        }\n      } else {\n        if (--bracketsCount === 0) {\n          const cssCode = tmpCodes[index].cssCode\n          if (typeof cssCode === 'string' && cssCode.includes('{')) {\n            tmpCodes[index].cssCode = parsingCode(cssCode)\n          }\n          index++\n          isSelectorName = true\n        } else {\n          tmpCodes[index][isSelectorName ? 'selectorName' : 'cssCode'] += char\n        }\n      }\n    } else {\n      if (!tmpCodes[index]) {\n        tmpCodes[index] = {\n          selectorName: '',\n          cssCode: ''\n        }\n      }\n      tmpCodes[index][isSelectorName ? 'selectorName' : 'cssCode'] += char\n    }\n  }\n  return tmpCodes.map(v => ({\n    selectorName: v.selectorName.trim(),\n    cssCode: typeof v.cssCode === 'string' ? v.cssCode.trim() : v.cssCode\n  }))\n}\n\nconst moreDefaultMediaVals: Record<string, string> = {\n  '@media(min-width:640px)': 'sm',\n  '@media(min-width:768px)': 'md',\n  '@media(min-width:1024px)': 'lg',\n  '@media(min-width:1280px)': 'xl',\n  '@media(min-width:1536px)': '2xl',\n  '@media_not_all_and(min-width:640px)': 'max-sm',\n  '@media_not_all_and(min-width:768px)': 'max-md',\n  '@media_not_all_and(min-width:1024px)': 'max-lg',\n  '@media_not_all_and(min-width:1280px)': 'max-xl',\n  '@media_not_all_and(min-width:1536px)': 'max-2xl',\n}\n\nconst moreDefaultValuesMap: Record<string, Record<string, string>> = {\n  'top': {\n    \"0px\": \"top-0\", \"1px\": \"top-px\", \"0.125rem\": \"top-0.5\", \"0.25rem\": \"top-1\", \"0.375rem\": \"top-1.5\", \"0.5rem\": \"top-2\", \"0.625rem\": \"top-2.5\", \"0.75rem\": \"top-3\", \"0.875rem\": \"top-3.5\", \"1rem\": \"top-4\", \"1.25rem\": \"top-5\", \"1.5rem\": \"top-6\", \"1.75rem\": \"top-7\", \"2rem\": \"top-8\", \"2.25rem\": \"top-9\", \"2.5rem\": \"top-10\", \"2.75rem\": \"top-11\", \"3rem\": \"top-12\", \"3.5rem\": \"top-14\", \"4rem\": \"top-16\", \"5rem\": \"top-20\", \"6rem\": \"top-24\", \"7rem\": \"top-28\", \"8rem\": \"top-32\", \"9rem\": \"top-36\", \"10rem\": \"top-40\", \"11rem\": \"top-44\", \"12rem\": \"top-48\", \"13rem\": \"top-52\", \"14rem\": \"top-56\", \"15rem\": \"top-60\", \"16rem\": \"top-64\", \"18rem\": \"top-72\", \"20rem\": \"top-80\", \"24rem\": \"top-96\", \"auto\": \"top-auto\", \"50%\": \"top-2/4\", \"33.333333%\": \"top-1/3\", \"66.666667%\": \"top-2/3\", \"25%\": \"top-1/4\", \"75%\": \"top-3/4\", \"100%\": \"top-full\", \"-1px\": \"-top-px\", \"-0.125rem\": \"-top-0.5\", \"-0.25rem\": \"-top-1\", \"-0.375rem\": \"-top-1.5\", \"-0.5rem\": \"-top-2\", \"-0.625rem\": \"-top-2.5\", \"-0.75rem\": \"-top-3\", \"-0.875rem\": \"-top-3.5\", \"-1rem\": \"-top-4\", \"-1.25rem\": \"-top-5\", \"-1.5rem\": \"-top-6\", \"-1.75rem\": \"-top-7\", \"-2rem\": \"-top-8\", \"-2.25rem\": \"-top-9\", \"-2.5rem\": \"-top-10\", \"-2.75rem\": \"-top-11\", \"-3rem\": \"-top-12\", \"-3.5rem\": \"-top-14\", \"-4rem\": \"-top-16\", \"-5rem\": \"-top-20\", \"-6rem\": \"-top-24\", \"-7rem\": \"-top-28\", \"-8rem\": \"-top-32\", \"-9rem\": \"-top-36\", \"-10rem\": \"-top-40\", \"-11rem\": \"-top-44\", \"-12rem\": \"-top-48\", \"-13rem\": \"-top-52\", \"-14rem\": \"-top-56\", \"-15rem\": \"-top-60\", \"-16rem\": \"-top-64\", \"-18rem\": \"-top-72\", \"-20rem\": \"-top-80\", \"-24rem\": \"-top-96\", \"-50%\": \"-top-2/4\", \"-33.333333%\": \"-top-1/3\", \"-66.666667%\": \"-top-2/3\", \"-25%\": \"-top-1/4\", \"-75%\": \"-top-3/4\", \"-100%\": \"-top-full\"\n  },\n  'bottom': {\n    \"0px\": \"bottom-0\", \"1px\": \"bottom-px\", \"0.125rem\": \"bottom-0.5\", \"0.25rem\": \"bottom-1\", \"0.375rem\": \"bottom-1.5\", \"0.5rem\": \"bottom-2\", \"0.625rem\": \"bottom-2.5\", \"0.75rem\": \"bottom-3\", \"0.875rem\": \"bottom-3.5\", \"1rem\": \"bottom-4\", \"1.25rem\": \"bottom-5\", \"1.5rem\": \"bottom-6\", \"1.75rem\": \"bottom-7\", \"2rem\": \"bottom-8\", \"2.25rem\": \"bottom-9\", \"2.5rem\": \"bottom-10\", \"2.75rem\": \"bottom-11\", \"3rem\": \"bottom-12\", \"3.5rem\": \"bottom-14\", \"4rem\": \"bottom-16\", \"5rem\": \"bottom-20\", \"6rem\": \"bottom-24\", \"7rem\": \"bottom-28\", \"8rem\": \"bottom-32\", \"9rem\": \"bottom-36\", \"10rem\": \"bottom-40\", \"11rem\": \"bottom-44\", \"12rem\": \"bottom-48\", \"13rem\": \"bottom-52\", \"14rem\": \"bottom-56\", \"15rem\": \"bottom-60\", \"16rem\": \"bottom-64\", \"18rem\": \"bottom-72\", \"20rem\": \"bottom-80\", \"24rem\": \"bottom-96\", \"auto\": \"bottom-auto\", \"50%\": \"bottom-2/4\", \"33.333333%\": \"bottom-1/3\", \"66.666667%\": \"bottom-2/3\", \"25%\": \"bottom-1/4\", \"75%\": \"bottom-3/4\", \"100%\": \"bottom-full\", \"-1px\": \"-bottom-px\", \"-0.125rem\": \"-bottom-0.5\", \"-0.25rem\": \"-bottom-1\", \"-0.375rem\": \"-bottom-1.5\", \"-0.5rem\": \"-bottom-2\", \"-0.625rem\": \"-bottom-2.5\", \"-0.75rem\": \"-bottom-3\", \"-0.875rem\": \"-bottom-3.5\", \"-1rem\": \"-bottom-4\", \"-1.25rem\": \"-bottom-5\", \"-1.5rem\": \"-bottom-6\", \"-1.75rem\": \"-bottom-7\", \"-2rem\": \"-bottom-8\", \"-2.25rem\": \"-bottom-9\", \"-2.5rem\": \"-bottom-10\", \"-2.75rem\": \"-bottom-11\", \"-3rem\": \"-bottom-12\", \"-3.5rem\": \"-bottom-14\", \"-4rem\": \"-bottom-16\", \"-5rem\": \"-bottom-20\", \"-6rem\": \"-bottom-24\", \"-7rem\": \"-bottom-28\", \"-8rem\": \"-bottom-32\", \"-9rem\": \"-bottom-36\", \"-10rem\": \"-bottom-40\", \"-11rem\": \"-bottom-44\", \"-12rem\": \"-bottom-48\", \"-13rem\": \"-bottom-52\", \"-14rem\": \"-bottom-56\", \"-15rem\": \"-bottom-60\", \"-16rem\": \"-bottom-64\", \"-18rem\": \"-bottom-72\", \"-20rem\": \"-bottom-80\", \"-24rem\": \"-bottom-96\", \"-50%\": \"-bottom-2/4\", \"-33.333333%\": \"-bottom-1/3\", \"-66.666667%\": \"-bottom-2/3\", \"-25%\": \"-bottom-1/4\", \"-75%\": \"-bottom-3/4\", \"-100%\": \"-bottom-full\"\n  },\n  'left': {\n    \"0px\": \"left-0\", \"1px\": \"left-px\", \"0.125rem\": \"left-0.5\", \"0.25rem\": \"left-1\", \"0.375rem\": \"left-1.5\", \"0.5rem\": \"left-2\", \"0.625rem\": \"left-2.5\", \"0.75rem\": \"left-3\", \"0.875rem\": \"left-3.5\", \"1rem\": \"left-4\", \"1.25rem\": \"left-5\", \"1.5rem\": \"left-6\", \"1.75rem\": \"left-7\", \"2rem\": \"left-8\", \"2.25rem\": \"left-9\", \"2.5rem\": \"left-10\", \"2.75rem\": \"left-11\", \"3rem\": \"left-12\", \"3.5rem\": \"left-14\", \"4rem\": \"left-16\", \"5rem\": \"left-20\", \"6rem\": \"left-24\", \"7rem\": \"left-28\", \"8rem\": \"left-32\", \"9rem\": \"left-36\", \"10rem\": \"left-40\", \"11rem\": \"left-44\", \"12rem\": \"left-48\", \"13rem\": \"left-52\", \"14rem\": \"left-56\", \"15rem\": \"left-60\", \"16rem\": \"left-64\", \"18rem\": \"left-72\", \"20rem\": \"left-80\", \"24rem\": \"left-96\", \"auto\": \"left-auto\", \"50%\": \"left-2/4\", \"33.333333%\": \"left-1/3\", \"66.666667%\": \"left-2/3\", \"25%\": \"left-1/4\", \"75%\": \"left-3/4\", \"100%\": \"left-full\", \"-1px\": \"-left-px\", \"-0.125rem\": \"-left-0.5\", \"-0.25rem\": \"-left-1\", \"-0.375rem\": \"-left-1.5\", \"-0.5rem\": \"-left-2\", \"-0.625rem\": \"-left-2.5\", \"-0.75rem\": \"-left-3\", \"-0.875rem\": \"-left-3.5\", \"-1rem\": \"-left-4\", \"-1.25rem\": \"-left-5\", \"-1.5rem\": \"-left-6\", \"-1.75rem\": \"-left-7\", \"-2rem\": \"-left-8\", \"-2.25rem\": \"-left-9\", \"-2.5rem\": \"-left-10\", \"-2.75rem\": \"-left-11\", \"-3rem\": \"-left-12\", \"-3.5rem\": \"-left-14\", \"-4rem\": \"-left-16\", \"-5rem\": \"-left-20\", \"-6rem\": \"-left-24\", \"-7rem\": \"-left-28\", \"-8rem\": \"-left-32\", \"-9rem\": \"-left-36\", \"-10rem\": \"-left-40\", \"-11rem\": \"-left-44\", \"-12rem\": \"-left-48\", \"-13rem\": \"-left-52\", \"-14rem\": \"-left-56\", \"-15rem\": \"-left-60\", \"-16rem\": \"-left-64\", \"-18rem\": \"-left-72\", \"-20rem\": \"-left-80\", \"-24rem\": \"-left-96\", \"-50%\": \"-left-2/4\", \"-33.333333%\": \"-left-1/3\", \"-66.666667%\": \"-left-2/3\", \"-25%\": \"-left-1/4\", \"-75%\": \"-left-3/4\", \"-100%\": \"-left-full\"\n  },\n  'right': {\n    \"0px\": \"right-0\", \"1px\": \"right-px\", \"0.125rem\": \"right-0.5\", \"0.25rem\": \"right-1\", \"0.375rem\": \"right-1.5\", \"0.5rem\": \"right-2\", \"0.625rem\": \"right-2.5\", \"0.75rem\": \"right-3\", \"0.875rem\": \"right-3.5\", \"1rem\": \"right-4\", \"1.25rem\": \"right-5\", \"1.5rem\": \"right-6\", \"1.75rem\": \"right-7\", \"2rem\": \"right-8\", \"2.25rem\": \"right-9\", \"2.5rem\": \"right-10\", \"2.75rem\": \"right-11\", \"3rem\": \"right-12\", \"3.5rem\": \"right-14\", \"4rem\": \"right-16\", \"5rem\": \"right-20\", \"6rem\": \"right-24\", \"7rem\": \"right-28\", \"8rem\": \"right-32\", \"9rem\": \"right-36\", \"10rem\": \"right-40\", \"11rem\": \"right-44\", \"12rem\": \"right-48\", \"13rem\": \"right-52\", \"14rem\": \"right-56\", \"15rem\": \"right-60\", \"16rem\": \"right-64\", \"18rem\": \"right-72\", \"20rem\": \"right-80\", \"24rem\": \"right-96\", \"auto\": \"right-auto\", \"50%\": \"right-2/4\", \"33.333333%\": \"right-1/3\", \"66.666667%\": \"right-2/3\", \"25%\": \"right-1/4\", \"75%\": \"right-3/4\", \"100%\": \"right-full\", \"-1px\": \"-right-px\", \"-0.125rem\": \"-right-0.5\", \"-0.25rem\": \"-right-1\", \"-0.375rem\": \"-right-1.5\", \"-0.5rem\": \"-right-2\", \"-0.625rem\": \"-right-2.5\", \"-0.75rem\": \"-right-3\", \"-0.875rem\": \"-right-3.5\", \"-1rem\": \"-right-4\", \"-1.25rem\": \"-right-5\", \"-1.5rem\": \"-right-6\", \"-1.75rem\": \"-right-7\", \"-2rem\": \"-right-8\", \"-2.25rem\": \"-right-9\", \"-2.5rem\": \"-right-10\", \"-2.75rem\": \"-right-11\", \"-3rem\": \"-right-12\", \"-3.5rem\": \"-right-14\", \"-4rem\": \"-right-16\", \"-5rem\": \"-right-20\", \"-6rem\": \"-right-24\", \"-7rem\": \"-right-28\", \"-8rem\": \"-right-32\", \"-9rem\": \"-right-36\", \"-10rem\": \"-right-40\", \"-11rem\": \"-right-44\", \"-12rem\": \"-right-48\", \"-13rem\": \"-right-52\", \"-14rem\": \"-right-56\", \"-15rem\": \"-right-60\", \"-16rem\": \"-right-64\", \"-18rem\": \"-right-72\", \"-20rem\": \"-right-80\", \"-24rem\": \"-right-96\", \"-50%\": \"-right-2/4\", \"-33.333333%\": \"-right-1/3\", \"-66.666667%\": \"-right-2/3\", \"-25%\": \"-right-1/4\", \"-75%\": \"-right-3/4\", \"-100%\": \"-right-full\"\n  },\n  'gap': {\n    \"0px\": \"gap-0\", \"0.125rem\": \"gap-0.5\", \"0.25rem\": \"gap-1\", \"0.375rem\": \"gap-1.5\", \"0.5rem\": \"gap-2\", \"0.625rem\": \"gap-2.5\", \"0.75rem\": \"gap-3\", \"0.875rem\": \"gap-3.5\", \"1rem\": \"gap-4\", \"1.25rem\": \"gap-5\", \"1.5rem\": \"gap-6\", \"1.75rem\": \"gap-7\", \"2rem\": \"gap-8\", \"2.25rem\": \"gap-9\", \"2.5rem\": \"gap-10\", \"2.75rem\": \"gap-11\", \"3rem\": \"gap-12\", \"3.5rem\": \"gap-14\", \"4rem\": \"gap-16\", \"5rem\": \"gap-20\", \"6rem\": \"gap-24\", \"7rem\": \"gap-28\", \"8rem\": \"gap-32\", \"9rem\": \"gap-36\", \"10rem\": \"gap-40\", \"11rem\": \"gap-44\", \"12rem\": \"gap-48\", \"13rem\": \"gap-52\", \"14rem\": \"gap-56\", \"15rem\": \"gap-60\", \"16rem\": \"gap-64\", \"18rem\": \"gap-72\", \"20rem\": \"gap-80\", \"24rem\": \"gap-96\"\n  },\n  'column-gap': {\n    \"0px\": \"gap-x-0\", \"1px\": \"gap-x-px\", \"0.125rem\": \"gap-x-0.5\", \"0.25rem\": \"gap-x-1\", \"0.375rem\": \"gap-x-1.5\", \"0.5rem\": \"gap-x-2\", \"0.625rem\": \"gap-x-2.5\", \"0.75rem\": \"gap-x-3\", \"0.875rem\": \"gap-x-3.5\", \"1rem\": \"gap-x-4\", \"1.25rem\": \"gap-x-5\", \"1.5rem\": \"gap-x-6\", \"1.75rem\": \"gap-x-7\", \"2rem\": \"gap-x-8\", \"2.25rem\": \"gap-x-9\", \"2.5rem\": \"gap-x-10\", \"2.75rem\": \"gap-x-11\", \"3rem\": \"gap-x-12\", \"3.5rem\": \"gap-x-14\", \"4rem\": \"gap-x-16\", \"5rem\": \"gap-x-20\", \"6rem\": \"gap-x-24\", \"7rem\": \"gap-x-28\", \"8rem\": \"gap-x-32\", \"9rem\": \"gap-x-36\", \"10rem\": \"gap-x-40\", \"11rem\": \"gap-x-44\", \"12rem\": \"gap-x-48\", \"13rem\": \"gap-x-52\", \"14rem\": \"gap-x-56\", \"15rem\": \"gap-x-60\", \"16rem\": \"gap-x-64\", \"18rem\": \"gap-x-72\", \"20rem\": \"gap-x-80\", \"24rem\": \"gap-x-96\"\n  },\n  'row-gap': {\n    \"0px\": \"gap-y-0\", \"1px\": \"gap-y-px\", \"0.125rem\": \"gap-y-0.5\", \"0.25rem\": \"gap-y-1\", \"0.375rem\": \"gap-y-1.5\", \"0.5rem\": \"gap-y-2\", \"0.625rem\": \"gap-y-2.5\", \"0.75rem\": \"gap-y-3\", \"0.875rem\": \"gap-y-3.5\", \"1rem\": \"gap-y-4\", \"1.25rem\": \"gap-y-5\", \"1.5rem\": \"gap-y-6\", \"1.75rem\": \"gap-y-7\", \"2rem\": \"gap-y-8\", \"2.25rem\": \"gap-y-9\", \"2.5rem\": \"gap-y-10\", \"2.75rem\": \"gap-y-11\", \"3rem\": \"gap-y-12\", \"3.5rem\": \"gap-y-14\", \"4rem\": \"gap-y-16\", \"5rem\": \"gap-y-20\", \"6rem\": \"gap-y-24\", \"7rem\": \"gap-y-28\", \"8rem\": \"gap-y-32\", \"9rem\": \"gap-y-36\", \"10rem\": \"gap-y-40\", \"11rem\": \"gap-y-44\", \"12rem\": \"gap-y-48\", \"13rem\": \"gap-y-52\", \"14rem\": \"gap-y-56\", \"15rem\": \"gap-y-60\", \"16rem\": \"gap-y-64\", \"18rem\": \"gap-y-72\", \"20rem\": \"gap-y-80\", \"24rem\": \"gap-y-96\"\n  },\n  'max-width': {\n    \"0rem\": \"max-w-0\", \"20rem\": \"max-w-xs\", \"24rem\": \"max-w-sm\", \"28rem\": \"max-w-md\", \"32rem\": \"max-w-lg\", \"36rem\": \"max-w-xl\", \"42rem\": \"max-w-2xl\", \"48rem\": \"max-w-3xl\", \"56rem\": \"max-w-4xl\", \"64rem\": \"max-w-5xl\", \"72rem\": \"max-w-6xl\", \"80rem\": \"max-w-7xl\", \"65ch\": \"max-w-prose\", \"640px\": \"max-w-screen-sm\", \"768px\": \"max-w-screen-md\", \"1024px\": \"max-w-screen-lg\", \"1280px\": \"max-w-screen-xl\", \"1536px\": \"max-w-screen-2xl\"\n  },\n  'max-height': {\n    \"1px\": \"max-h-px\", \"0.125rem\": \"max-h-0.5\", \"0.25rem\": \"max-h-1\", \"0.375rem\": \"max-h-1.5\", \"0.5rem\": \"max-h-2\", \"0.625rem\": \"max-h-2.5\", \"0.75rem\": \"max-h-3\", \"0.875rem\": \"max-h-3.5\", \"1rem\": \"max-h-4\", \"1.25rem\": \"max-h-5\", \"1.5rem\": \"max-h-6\", \"1.75rem\": \"max-h-7\", \"2rem\": \"max-h-8\", \"2.25rem\": \"max-h-9\", \"2.5rem\": \"max-h-10\", \"2.75rem\": \"max-h-11\", \"3rem\": \"max-h-12\", \"3.5rem\": \"max-h-14\", \"4rem\": \"max-h-16\", \"5rem\": \"max-h-20\", \"6rem\": \"max-h-24\", \"7rem\": \"max-h-28\", \"8rem\": \"max-h-32\", \"9rem\": \"max-h-36\", \"10rem\": \"max-h-40\", \"11rem\": \"max-h-44\", \"12rem\": \"max-h-48\", \"13rem\": \"max-h-52\", \"14rem\": \"max-h-56\", \"15rem\": \"max-h-60\", \"16rem\": \"max-h-64\", \"18rem\": \"max-h-72\", \"20rem\": \"max-h-80\", \"24rem\": \"max-h-96\",\n  },\n  'font-family': {\n    'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"': 'font-sans',\n    'ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif': 'font-serif',\n    'ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace': 'font-mono',\n  },\n  'font-weight': {\n    \"100\": \"font-thin\", \"200\": \"font-extralight\", \"300\": \"font-light\", \"400\": \"font-normal\", \"500\": \"font-medium\", \"600\": \"font-semibold\", \"700\": \"font-bold\", \"800\": \"font-extrabold\", \"900\": \"font-black\"\n  },\n  'line-height': {\n    \"1\": \"leading-none\", \"2\": \"leading-loose\", \".75rem\": \"leading-3\", \"1rem\": \"leading-4\", \"1.25rem\": \"leading-5\", \"1.5rem\": \"leading-6\", \"1.75rem\": \"leading-7\", \"2rem\": \"leading-8\", \"2.25rem\": \"leading-9\", \"2.5rem\": \"leading-10\", \"1.25\": \"leading-tight\", \"1.375\": \"leading-snug\", \"1.5\": \"leading-normal\", \"1.625\": \"leading-relaxed\"\n  },\n  'border-width': {\n    \"0px\": \"border-0\", \"2px\": \"border-2\", \"4px\": \"border-4\", \"8px\": \"border-8\", \"1px\": \"border\"\n  },\n  'border-top-width': {\n    \"0px\": \"border-t-0\", \"2px\": \"border-t-2\", \"4px\": \"border-t-4\", \"8px\": \"border-t-8\", \"1px\": \"border-t\"\n  },\n  'border-right-width': {\n    \"0px\": \"border-r-0\", \"2px\": \"border-r-2\", \"4px\": \"border-r-4\", \"8px\": \"border-r-8\", \"1px\": \"border-r\"\n  },\n  'border-bottom-width': {\n    \"0px\": \"border-b-0\", \"2px\": \"border-b-2\", \"4px\": \"border-b-4\", \"8px\": \"border-b-8\", \"1px\": \"border-b\"\n  },\n  'border-left-width': {\n    \"0px\": \"border-l-0\", \"2px\": \"border-l-2\", \"4px\": \"border-l-4\", \"8px\": \"border-l-8\", \"1px\": \"border-l\"\n  },\n  'transition': {\n    'all 150ms cubic-bezier(0.4, 0, 0.2, 1)': 'transition-all',\n    'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter 150ms cubic-bezier(0.4, 0, 0.2, 1)': 'transition',\n    'background-color, border-color, color, fill, stroke 150ms cubic-bezier(0.4, 0, 0.2, 1)': 'transition-colors',\n    'opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)': 'transition-opacity',\n    'box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1)': 'transition-shadow',\n    'transform 150ms cubic-bezier(0.4, 0, 0.2, 1)': 'transition-transform',\n  }\n}\n\nconst getResultCode = (it: CssCodeParse, prefix = '', config: TranslatorConfig) => {\n  if (typeof it.cssCode !== 'string') {\n    return null\n  }\n\n  const cssCodeList = it.cssCode.replace(/\\/(.*?)\\//g, '').split(';').filter(v => v !== '')\n\n  const resultVals = cssCodeList.map(v => {\n    let key = ''\n    let val = ''\n    for (let i = 0; i < v.length; i++) {\n      const c = v[i]\n      if (c !== ':') {\n        key += c\n      } else {\n        val = v.slice(i + 1, v.length).trim()\n        break\n      }\n    }\n    const pipe = propertyMap.get(key.trim())\n    let hasImportant = false\n    if (val.includes('!important')) {\n      val = val.replace('!important', '').trim()\n      hasImportant = true\n    }\n    let pipeVal = ''\n    if (val === 'initial' || val === 'inherit') {\n      pipeVal = `[${key.trim()}:${val}]`\n    } else {\n      config.customTheme = config.customTheme ?? {}\n      pipeVal = typeof pipe === 'function'\n        ? (config.customTheme[key.trim()]?.[val] || (config.useAllDefaultValues && moreDefaultValuesMap[key.trim()]?.[val]) || pipe(val))\n        : (config.customTheme[key.trim()]?.[val] || (config.useAllDefaultValues && moreDefaultValuesMap[key.trim()]?.[val]) || (pipe?.[val] ?? ''))\n    }\n    if ((config.prefix?.length ?? 0) > 0) {\n      pipeVal = pipeVal.split(' ').map(v => `${v[0] === '-' ? '-' : ''}${config.prefix}${v.replace(/^-/, '')}`).join(' ')\n    }\n    if (hasImportant) {\n      const getImportantVal = (v: string) => {\n        if (v[0] === '[' && v[v.length - 1] === ']') {\n          v = `${v.slice(0, -1)}!important]`\n        } else {\n          v = `!${v}`\n        }\n        return v\n      }\n      if (pipeVal.includes(' ') && ['backdrop-filter', 'filter', 'transform'].filter(v => pipeVal.startsWith(v)).length === 0) {\n        pipeVal = pipeVal.split(' ').map(v => getImportantVal(v)).join(' ')\n      } else if (pipeVal.length > 0) {\n        pipeVal = getImportantVal(pipeVal)\n      }\n    }\n    if (it.selectorName.endsWith(':hover') && pipeVal.length > 0) {\n      if (['backdrop-filter', 'filter', 'transform'].filter(v => pipeVal.startsWith(v)).length > 0) {\n        pipeVal = `hover:${pipeVal}`\n      } else {\n        pipeVal = pipeVal.split(' ').map(v => `hover:${v}`).join(' ')\n      }\n    } else if (it.selectorName.endsWith(':focus') && pipeVal.length > 0) {\n      if (['backdrop-filter', 'filter', 'transform'].filter(v => pipeVal.startsWith(v)).length > 0) {\n        pipeVal = `focus:${pipeVal}`\n      } else {\n        pipeVal = pipeVal.split(' ').map(v => `focus:${v}`).join(' ')\n      }\n    } else if (it.selectorName.endsWith(':active') && pipeVal.length > 0) {\n      if (['backdrop-filter', 'filter', 'transform'].filter(v => pipeVal.startsWith(v)).length > 0) {\n        pipeVal = `active:${pipeVal}`\n      } else {\n        pipeVal = pipeVal.split(' ').map(v => `active:${v}`).join(' ')\n      }\n    } else if (it.selectorName.endsWith('::before') && pipeVal.length > 0) {\n      if (['backdrop-filter', 'filter', 'transform'].filter(v => pipeVal.startsWith(v)).length > 0) {\n        pipeVal = `before:${pipeVal}`\n      } else {\n        pipeVal = pipeVal.split(' ').map(v => `before:${v}`).join(' ')\n      }\n    } else if (it.selectorName.endsWith('::after') && pipeVal.length > 0) {\n      if (['backdrop-filter', 'filter', 'transform'].filter(v => pipeVal.startsWith(v)).length > 0) {\n        pipeVal = `after:${pipeVal}`\n      } else {\n        pipeVal = pipeVal.split(' ').map(v => `after:${v}`).join(' ')\n      }\n    }\n    if (prefix.length > 0) {\n      if (['backdrop-filter', 'filter', 'transform'].filter(v => pipeVal.startsWith(v)).length > 0) {\n        pipeVal = `${prefix}:${pipeVal}`\n      } else {\n        pipeVal = pipeVal.split(' ').map(v => `${prefix}:${v}`).join(' ')\n      }\n    }\n    return pipeVal\n  }).filter(v => v !== '')\n  return {\n    selectorName: it.selectorName,\n    resultVal: [...new Set(resultVals)].join(' ')\n  }\n}\n\nconst defaultTranslatorConfig = {\n  prefix: '',\n  useAllDefaultValues: true,\n  customTheme: {}\n}\n\nconst CssToTailwind = (code: string, config: TranslatorConfig = defaultTranslatorConfig): {\n  code: 'SyntaxError' | 'OK'\n  data: ResultCode[]\n} => {\n  if (specialAttribute.map(v => code.includes(v)).filter(v => v).length > 0) {\n    return {\n      code: 'SyntaxError',\n      data: []\n    }\n  }\n  useAllDefaultValues = config.useAllDefaultValues ?? defaultTranslatorConfig.useAllDefaultValues\n  customTheme = config.customTheme ?? defaultTranslatorConfig.customTheme\n  const dataArray: ResultCode[] = []\n  parsingCode(code).map(it => {\n    if (typeof it.cssCode === 'string') {\n      return getResultCode(it, '', config)\n    } else if (it.selectorName.includes('@media')) {\n      return it.cssCode.map(v => {\n        const mediaName = getCustomVal(it.selectorName.replace(/\\(.+\\)/g, v => v.replace(/\\s/g, '')).replace(/\\s+\\(/g, '('))\n        const res = getResultCode(v, customTheme.media?.[it.selectorName] || (config.useAllDefaultValues && moreDefaultMediaVals[mediaName]) || `[${mediaName}]`, config)\n        return res ? ({\n          selectorName: `${it.selectorName}-->${res.selectorName}`,\n          resultVal: res.resultVal\n        }) : null\n      })\n    } else {\n      return null\n    }\n  }).filter(v => v !== null).forEach((v) => {\n    if (Array.isArray(v)) {\n      dataArray.push(...(v as ResultCode[]))\n    } else {\n      dataArray.push(v as ResultCode)\n    }\n  })\n  return {\n    code: 'OK',\n    data: dataArray\n  }\n}\n\nexport {\n  CssToTailwind,\n  specialAttribute,\n  defaultTranslatorConfig\n}\n"],"mappings":"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","names":["v","_a","val","t"]}